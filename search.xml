<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>十五、利用less实现一个雪花❄️</title>
      <link href="/2020/01/30/15.%E5%88%A9%E7%94%A8less%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E9%9B%AA%E8%8A%B1%E2%9D%84%EF%B8%8F/"/>
      <url>/2020/01/30/15.%E5%88%A9%E7%94%A8less%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E9%9B%AA%E8%8A%B1%E2%9D%84%EF%B8%8F/</url>
      
        <content type="html"><![CDATA[<h2 id="利用less实现一个雪花"><a href="#利用less实现一个雪花" class="headerlink" title="利用less实现一个雪花"></a>利用less实现一个雪花</h2><ul><li><p>看了一篇文章，里面用less实现了一个雪花，里面less的用法让我眼前一亮，该看看less的其他用法了。</p><a id="more"></a><p><img src="/images/snow.png" alt></p></li></ul><ul><li>html - 实现雪花，html结构是很重要的。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">&lt;figure className=&#123; styleCss.snowflake &#125;&gt;</span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="title">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">span</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">span</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">span</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">span</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">span</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">span</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">span</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">span</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">span</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">span</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">span</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">span</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">span</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">span</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">span</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">span</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">span</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">span</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">span</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">span</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">span</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">span</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">span</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">span</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">span</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">span</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">span</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">span</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">span</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">span</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">figure</span>&gt;</span></span></span><br></pre></td></tr></table></figure><ul><li>less - 实现雪花的核心代码</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">.snowflake&#123;</span><br><span class="line">    font-size: <span class="number">100</span>px;</span><br><span class="line">    color: snow;</span><br><span class="line">    width: <span class="number">4</span>em;</span><br><span class="line">    height: <span class="number">4</span>em;</span><br><span class="line">    outline: <span class="number">1</span>px dashed yellow;</span><br><span class="line">    position: relative;</span><br><span class="line">    display: flex;</span><br><span class="line">    justify-content: center;</span><br><span class="line"></span><br><span class="line">    div &#123;</span><br><span class="line">        width: <span class="number">0.1</span>em;</span><br><span class="line">        height: <span class="number">2</span>em;</span><br><span class="line">        background-color: currentColor;</span><br><span class="line">        border-radius: <span class="number">0.05</span>em;</span><br><span class="line">        position: absolute;</span><br><span class="line">        transform-origin: bottom;</span><br><span class="line">        transform: rotate(calc(<span class="keyword">var</span>(--n) * <span class="number">60</span>deg));</span><br><span class="line">        display: flex;</span><br><span class="line">        flex-direction: column;</span><br><span class="line">        align-items: center;</span><br><span class="line">        </span><br><span class="line">        span:nth-child(<span class="number">1</span>),span:nth-child(<span class="number">2</span>),span:nth-child(<span class="number">3</span>),span:nth-child(<span class="number">4</span>) &#123;</span><br><span class="line">            width: calc(<span class="keyword">var</span>(--slide-width));</span><br><span class="line">            height: calc(<span class="keyword">var</span>(--slide-width));</span><br><span class="line">            border: <span class="number">0.1</span>em solid;</span><br><span class="line">            border-width: <span class="number">0.1</span>em;</span><br><span class="line">            border-style: none solid solid none;</span><br><span class="line">            border-radius: <span class="number">0.05</span>em;</span><br><span class="line">            transform: rotate(<span class="number">45</span>deg);</span><br><span class="line">        &#125;</span><br><span class="line">        span:nth-child(<span class="number">1</span>)&#123;--slide-width:<span class="number">0.2</span>rem;&#125;</span><br><span class="line">        span:nth-child(<span class="number">2</span>)&#123;--slide-width:<span class="number">0.5</span>rem;&#125;</span><br><span class="line">        span:nth-child(<span class="number">3</span>)&#123;--slide-width:<span class="number">0.4</span>rem;&#125;</span><br><span class="line">        span:nth-child(<span class="number">4</span>)&#123;--slide-width:<span class="number">0.3</span>rem;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    div:nth-child(<span class="number">1</span>) &#123;--n: <span class="number">1</span>;&#125;</span><br><span class="line">    div:nth-child(<span class="number">2</span>) &#123;--n: <span class="number">2</span>;&#125;</span><br><span class="line">    div:nth-child(<span class="number">3</span>) &#123;--n: <span class="number">3</span>;&#125;</span><br><span class="line">    div:nth-child(<span class="number">4</span>) &#123;--n: <span class="number">4</span>;&#125;</span><br><span class="line">    div:nth-child(<span class="number">5</span>) &#123;--n: <span class="number">5</span>;&#125;</span><br><span class="line">    div:nth-child(<span class="number">6</span>) &#123;--n: <span class="number">6</span>;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> less </tag>
            
            <tag> 雪花 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>十四、eventloop事件循环</title>
      <link href="/2020/01/25/14.eventloop%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF/"/>
      <url>/2020/01/25/14.eventloop%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF/</url>
      
        <content type="html"><![CDATA[<h2 id="eventloop事件循环"><a href="#eventloop事件循环" class="headerlink" title="eventloop事件循环"></a>eventloop事件循环</h2><ul><li>js是单线程执行的，eventloop事件循环就是解决javaScript单线程运行阻塞的一种机制。</li></ul><h3 id="一、宏任务和微任务"><a href="#一、宏任务和微任务" class="headerlink" title="一、宏任务和微任务"></a>一、宏任务和微任务</h3> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">在 js 中，任务分为宏任务(macrotask)和微任务(microtask)，这两个任务分别维护一个队列，均采用先进先出(类似放盘子)的策略进行执行，同步执行的任务都在宏任务上执行。</span><br><span class="line">宏任务主要有：script(整体代码)、setTimeout、setInterval、I/O、UI 交互事件、postMessage、MessageChannel、setImmediate(Node.js 环境)。</span><br><span class="line">微任务主要有：<span class="built_in">Promise</span>.then、 MutationObserver、 process.nextTick(Node.js 环境)。</span><br><span class="line"></span><br><span class="line">宏任务是由多个微任务组成的，先执行微任务，后执行宏任务。</span><br></pre></td></tr></table></figure><h3 id="二、运行机制"><a href="#二、运行机制" class="headerlink" title="二、运行机制"></a>二、运行机制</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">在事件循环中，每进行一次循环操作称为 tick，每一次 tick 的任务处理模型是比较复杂的，但关键步骤如下：</span><br><span class="line"></span><br><span class="line">- 执行一个宏任务（栈中没有就从事件队列中获取）</span><br><span class="line">- 执行过程中如果遇到微任务，就将它添加到微任务的任务队列中</span><br><span class="line">- 宏任务执行完毕后，立即执行当前微任务队列中的所有微任务（依次执行）</span><br><span class="line">- 当前宏任务执行完毕，开始检查渲染，然后GUI线程接管渲染</span><br><span class="line">- 渲染完毕后，JS线程继续接管，开始下一个宏任务（从事件队列中获取）</span><br></pre></td></tr></table></figure><h3 id="三、🌰"><a href="#三、🌰" class="headerlink" title="三、🌰"></a>三、🌰</h3><h3 id="1-尝试输出以下代码"><a href="#1-尝试输出以下代码" class="headerlink" title="1.尝试输出以下代码"></a>1.尝试输出以下代码</h3> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="number">1</span>);</span><br><span class="line">setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">2</span>);</span><br><span class="line">&#125;, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span>(<span class="params">resolve</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">3</span>);</span><br><span class="line">    resolve(<span class="built_in">Date</span>.now());</span><br><span class="line">&#125;).then(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">4</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">5</span>);</span><br><span class="line">setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span>(<span class="params">resolve</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="number">6</span>);</span><br><span class="line">        resolve(<span class="built_in">Date</span>.now());</span><br><span class="line">    &#125;).then(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="number">7</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;, <span class="number">0</span>);</span><br></pre></td></tr></table></figure><ul><li><p>那么以上代码的执行过程是什么样的呢？</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//  1 3 5 4 2 6 7 </span></span><br><span class="line"><span class="number">1.</span>代码从上往下执行，首先输出 <span class="number">1</span>，</span><br><span class="line"><span class="number">2.</span>遇到setTimeout，推入宏任务，待后面执行，</span><br><span class="line"><span class="number">3.</span>遇到<span class="built_in">Promise</span>，首先打印 <span class="number">3</span>，把then后面的推入微任务，</span><br><span class="line"><span class="number">4.</span>直接打印 <span class="number">5</span>，</span><br><span class="line"><span class="number">6.</span>遇到setTimeout，推入宏任务，待后面执行，</span><br><span class="line"><span class="number">7.</span>微任务按顺序执行，打印 <span class="number">4</span>，</span><br><span class="line"><span class="number">8.</span>宏任务按顺序执行，打印 <span class="number">2</span>，任务队列中没有微任务，下一步，</span><br><span class="line"><span class="number">9.</span>执行宏任务，打印 <span class="number">6</span>，把then后面的推入微任务，</span><br><span class="line"><span class="number">10.</span>执行微任务，打印 <span class="number">7</span>，完成。</span><br></pre></td></tr></table></figure><h3 id="2-尝试输出以下代码"><a href="#2-尝试输出以下代码" class="headerlink" title="2.尝试输出以下代码"></a>2.尝试输出以下代码</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">async1</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'async1 start'</span>);</span><br><span class="line">    <span class="keyword">await</span> async2();</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'async1 end'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">async2</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'async2'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'script start'</span>);</span><br><span class="line">setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'setTimeout'</span>);</span><br><span class="line">&#125;, <span class="number">0</span>)</span><br><span class="line">async1();</span><br><span class="line"><span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span>(<span class="params">resolve</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'promise1'</span>);</span><br><span class="line">    resolve();</span><br><span class="line">&#125;).then(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'promise2'</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'script end'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line">    await async2()等价于</span><br><span class="line">    async2().then(() =&gt; &#123;</span><br><span class="line">            console.log('async1 end');</span><br><span class="line">    &#125;)</span><br><span class="line">**/</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span><br><span class="line">    script start</span><br><span class="line">    async1 start</span><br><span class="line">    async2</span><br><span class="line">    promise1</span><br><span class="line">    script end</span><br><span class="line">    async1 end</span><br><span class="line">    promise2</span><br><span class="line">    setTimeout</span><br><span class="line">*/</span></span><br><span class="line"><span class="number">1.</span>首先定义了两个<span class="keyword">async</span>，没调用，直接下一步，</span><br><span class="line"><span class="number">2.</span>执行 script start，</span><br><span class="line"><span class="number">3.</span>遇到setTimeout， 推入宏任务，</span><br><span class="line"><span class="number">3.</span>执行 async1函数,在<span class="keyword">await</span>之前的代码是立即执行的，所以会立即输出 async1 start,遇到了<span class="keyword">await</span>时，会将<span class="keyword">await</span>后面的表达式执行一遍，所以就紧接着输出async2,打印async2，</span><br><span class="line"><span class="number">4.</span>往下走，遇到<span class="built_in">Promise</span>，打印promise1， then推入微任务，</span><br><span class="line"><span class="number">5.</span>往下走，打印script end，</span><br><span class="line"><span class="number">6.</span>继续按顺序执行之前任务队列中的微任务，先打印async1 end， 再打印 promise2，</span><br><span class="line"><span class="number">7.</span>执行宏任务，打印setTimeout。</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> eventloop </tag>
            
            <tag> 事件循环 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>十三、数组和字符串相关方法</title>
      <link href="/2020/01/20/13.%E6%95%B0%E7%BB%84%E5%92%8C%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9B%B8%E5%85%B3%E6%96%B9%E6%B3%95/"/>
      <url>/2020/01/20/13.%E6%95%B0%E7%BB%84%E5%92%8C%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9B%B8%E5%85%B3%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h2 id="一：数组方法"><a href="#一：数组方法" class="headerlink" title="一：数组方法"></a>一：数组方法</h2><a id="more"></a><h3 id="1-splice-–-拼接数组"><a href="#1-splice-–-拼接数组" class="headerlink" title="1.splice() – 拼接数组"></a>1.splice() – 拼接数组</h3> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 使用1： 删除元素</span></span><br><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];</span><br><span class="line">arr.splice(<span class="number">0</span>,<span class="number">1</span>); <span class="comment">// [1]</span></span><br><span class="line"><span class="comment">/**</span><br><span class="line">    第一个参数（0）定义了删除元素的位置（下标）;</span><br><span class="line">    第二个参数（1）定义应删除多少元素;</span><br><span class="line">    该方法返回一个包含已删除项的数组,改变原数组 [2,3]</span><br><span class="line">**/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用2： 向指定位置添加元素</span></span><br><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];</span><br><span class="line">arr.splice(<span class="number">2</span>,<span class="number">0</span>,<span class="number">5</span>,<span class="number">6</span>); <span class="comment">// []</span></span><br><span class="line"><span class="comment">/**</span><br><span class="line">    第一个参数（2）定义了应添加新元素的位置（下标）;</span><br><span class="line">    第二个参数（0）定义应删除多少元素;</span><br><span class="line">    其余参数（'5','6'）定义要添加的新元素.</span><br><span class="line">    该方法返回一个包含已删除项的数组,改变原数组 [1, 2, 5, 6, 3]</span><br><span class="line">**/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用3： 向指定位置替换元素</span></span><br><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];</span><br><span class="line">arr.splice(<span class="number">2</span>,<span class="number">1</span>,<span class="number">5</span>,<span class="number">6</span>); <span class="comment">// [3]</span></span><br><span class="line"><span class="comment">/**</span><br><span class="line">    第一个参数（2）定义了应添加新元素的位置（下标）;</span><br><span class="line">    第二个参数（1）定义应删除多少元素;</span><br><span class="line">    其余参数（'5','6'）定义要添加的新元素.</span><br><span class="line">    该方法返回一个包含已删除项的数组,改变原数组 [1, 2, 5, 6]</span><br><span class="line">**/</span></span><br></pre></td></tr></table></figure><h3 id="2-slice-–-裁剪数组"><a href="#2-slice-–-裁剪数组" class="headerlink" title="2.slice() – 裁剪数组"></a>2.slice() – 裁剪数组</h3>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line"> <span class="comment">// 使用1： 只有一个参数 -- 从下标 1 开始切出一段数组，结束参数被省略，则 slice() 会切出数组的剩余部分</span></span><br><span class="line"> <span class="keyword">const</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>];</span><br><span class="line"> arr.slice(<span class="number">1</span>); <span class="comment">// [2,3,4,5];</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 使用1： 两个参数 -- 从下标 1 到 3 切出一段数组（不包括结束参数）</span></span><br><span class="line"> <span class="keyword">const</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>];</span><br><span class="line"> arr.slice(<span class="number">1</span>,<span class="number">3</span>); <span class="comment">// [2,3];</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">// 该方法创建新数组,不会改变原数组</span></span><br></pre></td></tr></table></figure><h3 id="3-toString-、join-–-把数组转换为字符串"><a href="#3-toString-、join-–-把数组转换为字符串" class="headerlink" title="3.toString()、join() – 把数组转换为字符串"></a>3.toString()、join() – 把数组转换为字符串</h3> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];</span><br><span class="line">arr.toString(); <span class="comment">// 1,2,3</span></span><br><span class="line">arr.join(<span class="string">'-'</span>); <span class="comment">// 1-2-3 join() 可以规定分隔符 -</span></span><br></pre></td></tr></table></figure><h3 id="4-pop-–-方法从数组中删除最后一个元素"><a href="#4-pop-–-方法从数组中删除最后一个元素" class="headerlink" title="4.pop() – 方法从数组中删除最后一个元素"></a>4.pop() – 方法从数组中删除最后一个元素</h3> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">const</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];</span><br><span class="line"> arr.pop(); <span class="comment">// 3 </span></span><br><span class="line"> <span class="comment">// 该方法返回被删除的元素, 改变原数组 [1,2]</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line">   使用栈的思想扁平化数组：</span><br><span class="line">   const flat = (arr) =&gt; &#123;</span><br><span class="line">      const stack = [...arr];</span><br><span class="line">      const res = [];</span><br><span class="line">      while( stack.length )&#123;</span><br><span class="line">         const next = stack.pop();</span><br><span class="line">         if(Array.isArray(next))&#123;</span><br><span class="line">               stack.push(...next);</span><br><span class="line">         &#125; else &#123;</span><br><span class="line">               res.push(next)</span><br><span class="line">         &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      return res.reverse();</span><br><span class="line">&#125;*/</span></span><br></pre></td></tr></table></figure><h3 id="5-push-–-向数组末尾添加一个新的元素"><a href="#5-push-–-向数组末尾添加一个新的元素" class="headerlink" title="5.push() – 向数组末尾添加一个新的元素"></a>5.push() – 向数组末尾添加一个新的元素</h3> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];</span><br><span class="line">arr.push(<span class="number">4</span>); <span class="comment">// 4</span></span><br><span class="line"><span class="comment">// 该方法返回新数组的长度 length, 改变原数组 [1,2,3,4]</span></span><br></pre></td></tr></table></figure><h3 id="6-shift-–-删除首个数组元素"><a href="#6-shift-–-删除首个数组元素" class="headerlink" title="6.shift() – 删除首个数组元素"></a>6.shift() – 删除首个数组元素</h3> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];</span><br><span class="line">arr.shift(); <span class="comment">// 1</span></span><br><span class="line"><span class="comment">// 该方法返回被删除的元素, 改变原数组 [2,3]</span></span><br></pre></td></tr></table></figure><h3 id="7-unshift-–-向数组头部添加新元素"><a href="#7-unshift-–-向数组头部添加新元素" class="headerlink" title="7.unshift() – 向数组头部添加新元素"></a>7.unshift() – 向数组头部添加新元素</h3> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];</span><br><span class="line">arr.unshift(<span class="number">9</span>); <span class="comment">// 4</span></span><br><span class="line"><span class="comment">// 该方法返回新数组的长度 length, 改变原数组 [9,1,2,3]</span></span><br></pre></td></tr></table></figure><h3 id="8-concat-–-合并数组"><a href="#8-concat-–-合并数组" class="headerlink" title="8.concat() – 合并数组"></a>8.concat() – 合并数组</h3> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];</span><br><span class="line"><span class="keyword">const</span> newArr = [<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>];</span><br><span class="line">arr.concat(newArr); <span class="comment">// [1,2,3,4,5,6]</span></span><br><span class="line"><span class="comment">// 该方法不会更改现有数组，它总是返回一个新数组 [1,2,3,4,5,6]</span></span><br></pre></td></tr></table></figure><h3 id="9-sort-–-数组排序"><a href="#9-sort-–-数组排序" class="headerlink" title="9.sort() – 数组排序"></a>9.sort() – 数组排序</h3> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">2</span>,<span class="number">1</span>,<span class="number">3</span>];</span><br><span class="line">arr.sort(); <span class="comment">// [1,2,3]</span></span><br><span class="line">arr.sort((a,b) =&gt; b - a) <span class="comment">// [3,2,1]</span></span><br><span class="line"><span class="comment">// 该方法不会更改现有数组，它总是返回一个新数组 [1,2,3,4,5,6]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line">    // 1.排序</span><br><span class="line">        const compare = (property,desc) =&gt; &#123;</span><br><span class="line">            return function (a, b) &#123;</span><br><span class="line">                var value1 = a[property];</span><br><span class="line">                var value2 = b[property];</span><br><span class="line">                if(desc)&#123;</span><br><span class="line">                    // 升序排列</span><br><span class="line">                    return value1 - value2;</span><br><span class="line">                &#125;else&#123;</span><br><span class="line">                    // 降序排列</span><br><span class="line">                    return value2 - value1;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    2. 查找最大值</span><br><span class="line">        Math.max.apply(null, arr);</span><br><span class="line"></span><br><span class="line">    3. 查找最小值</span><br><span class="line">        Math.min.apply(null, arr);</span><br><span class="line">*/</span></span><br></pre></td></tr></table></figure><h3 id="9-reverse-–-反转数组"><a href="#9-reverse-–-反转数组" class="headerlink" title="9.reverse() – 反转数组"></a>9.reverse() – 反转数组</h3> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];</span><br><span class="line">arr.reverse(arr); <span class="comment">// [3,2,1]</span></span><br></pre></td></tr></table></figure><h2 id="二：字符串方法"><a href="#二：字符串方法" class="headerlink" title="二：字符串方法"></a>二：字符串方法</h2><h3 id="1-indexOf-–-返回字符串中指定文本-首次-出现的索引（位置）"><a href="#1-indexOf-–-返回字符串中指定文本-首次-出现的索引（位置）" class="headerlink" title="1.indexOf() – 返回字符串中指定文本 首次 出现的索引（位置）"></a>1.indexOf() – 返回字符串中指定文本 首次 出现的索引（位置）</h3> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> str = <span class="string">'indexOf'</span>;</span><br><span class="line">str.indexOf(<span class="string">'index'</span>); <span class="comment">// 0</span></span><br><span class="line"><span class="comment">// 如果未找到文本， 返回 -1</span></span><br></pre></td></tr></table></figure><h3 id="2-lastIndexOf-–-返回指定文本在字符串中-最后-一次出现的索引"><a href="#2-lastIndexOf-–-返回指定文本在字符串中-最后-一次出现的索引" class="headerlink" title="2.lastIndexOf() – 返回指定文本在字符串中 最后 一次出现的索引"></a>2.lastIndexOf() – 返回指定文本在字符串中 最后 一次出现的索引</h3> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> str = <span class="string">'lastIndexOf'</span>;</span><br><span class="line">str.lastIndexOf(<span class="string">'last'</span>); <span class="comment">// 0</span></span><br><span class="line"><span class="comment">// 如果未找到文本， 返回 -1</span></span><br></pre></td></tr></table></figure><h3 id="3-slice-、substring-、substr-–-裁剪字符串"><a href="#3-slice-、substring-、substr-–-裁剪字符串" class="headerlink" title="3.slice()、substring()、substr() – 裁剪字符串"></a>3.slice()、substring()、substr() – 裁剪字符串</h3> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//有三种提取部分字符串的方法：</span></span><br><span class="line"> - slice(start, end)</span><br><span class="line"> - substring(start, end)</span><br><span class="line"> - substr(start, length)</span><br></pre></td></tr></table></figure><ul><li><p>slice() – 提取字符串的某个部分并在新字符串中返回被提取的部分</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> str = <span class="string">'提取字符串'</span>;</span><br><span class="line">str.slice(<span class="number">2</span>,<span class="number">3</span>); <span class="comment">// '字'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果某个参数为负，则从字符串的结尾开始计数。</span></span><br><span class="line">str.slice(-<span class="number">3</span>,-<span class="number">2</span>); <span class="comment">// '字'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果省略第二个参数，则该方法将裁剪字符串的剩余部分：</span></span><br><span class="line">str.slice(<span class="number">1</span>); <span class="comment">// '取字符串'</span></span><br></pre></td></tr></table></figure></li><li><p>substring() – 类似于 slice(), 但是无法接受负的索引</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> str = <span class="string">'提取字符串'</span>;</span><br><span class="line">str.substring(<span class="number">2</span>,<span class="number">3</span>); <span class="comment">// '字'</span></span><br></pre></td></tr></table></figure></li><li><p>substr() – 类似于 slice(), 但是第二个参数规定被提取部分的长度</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> str = <span class="string">'提取字符串'</span>;</span><br><span class="line">str.substring(<span class="number">2</span>,<span class="number">3</span>); <span class="comment">// '字符串'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果省略第二个参数，则该 substr() 将裁剪字符串的剩余部分。</span></span><br><span class="line"> str.substring(<span class="number">2</span>); <span class="comment">// '取字符串'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//如果首个参数为负，则从字符串的结尾计算位置。第二个参数不能为负，因为它定义的是长度。</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="4-replace-–-用另一个值替换在字符串中指定的值"><a href="#4-replace-–-用另一个值替换在字符串中指定的值" class="headerlink" title="4.replace() – 用另一个值替换在字符串中指定的值"></a>4.replace() – 用另一个值替换在字符串中指定的值</h3>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> str = <span class="string">'hello world'</span>;</span><br><span class="line">str.replace(<span class="regexp">/l/ig</span>,<span class="string">'替换'</span>); <span class="comment">// "he替换替换o wor替换d" </span></span><br><span class="line"><span class="comment">// 返回的是新字符串。</span></span><br></pre></td></tr></table></figure><h3 id="5-toUpperCase-–-把字符串转换为大写"><a href="#5-toUpperCase-–-把字符串转换为大写" class="headerlink" title="5.toUpperCase() – 把字符串转换为大写"></a>5.toUpperCase() – 把字符串转换为大写</h3>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> str = <span class="string">'hello world'</span>;</span><br><span class="line">str.toUpperCase(); <span class="comment">// "HELLO WORLD"</span></span><br></pre></td></tr></table></figure><h3 id="6-toLowerCase-–-把字符串转换为小写"><a href="#6-toLowerCase-–-把字符串转换为小写" class="headerlink" title="6.toLowerCase() –  把字符串转换为小写"></a>6.toLowerCase() –  把字符串转换为小写</h3>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> str = <span class="string">'HELLO WORLD'</span>;</span><br><span class="line">str.toLowerCase(); <span class="comment">// "hello world"</span></span><br></pre></td></tr></table></figure><h3 id="7-concat-–-连接两个或多个字符串"><a href="#7-concat-–-连接两个或多个字符串" class="headerlink" title="7.concat() –  连接两个或多个字符串"></a>7.concat() –  连接两个或多个字符串</h3>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> str = <span class="string">'hello'</span>;</span><br><span class="line"><span class="keyword">const</span> str2 = <span class="string">'world'</span>;</span><br><span class="line">str.concat(str2); <span class="comment">// "helloworld"</span></span><br></pre></td></tr></table></figure><h3 id="8-trim-–-删除字符串两端的空白符："><a href="#8-trim-–-删除字符串两端的空白符：" class="headerlink" title="8.trim() –  删除字符串两端的空白符："></a>8.trim() –  删除字符串两端的空白符：</h3>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> str = <span class="string">' hello world '</span>;</span><br><span class="line">str.trim(); <span class="comment">// "hello world"</span></span><br></pre></td></tr></table></figure><h3 id="9-split-–-将字符串转换为数组"><a href="#9-split-–-将字符串转换为数组" class="headerlink" title="9.split() – 将字符串转换为数组"></a>9.split() – 将字符串转换为数组</h3> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> str = <span class="string">'1,2,3,4'</span>;</span><br><span class="line">str.split(<span class="string">','</span>); <span class="comment">// ["1", "2", "3", "4"]</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
            <tag> 字符串方法 </tag>
            
            <tag> 数组 </tag>
            
            <tag> 数组方法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>十二、数组去重</title>
      <link href="/2020/01/15/12.%E6%95%B0%E7%BB%84%E5%8E%BB%E9%87%8D/"/>
      <url>/2020/01/15/12.%E6%95%B0%E7%BB%84%E5%8E%BB%E9%87%8D/</url>
      
        <content type="html"><![CDATA[<h2 id="数组去重"><a href="#数组去重" class="headerlink" title="数组去重"></a>数组去重</h2><a id="more"></a><ul><li><p>reduce + find</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> data = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">6</span>,<span class="number">7</span>];</span><br><span class="line"><span class="keyword">const</span> distinct = (arr) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> arr.reduce((total,curr, index) =&gt; &#123;</span><br><span class="line">        <span class="comment">// find返回数组中满足提供的测试函数的第一个元素的值</span></span><br><span class="line">        <span class="keyword">const</span> exist = total.find((item) =&gt; item === curr );</span><br><span class="line">        <span class="keyword">if</span>(!exist)&#123;</span><br><span class="line">            total.push(curr)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> total</span><br><span class="line">    &#125;,[])</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(distinct(data)); <span class="comment">// // [1, 2, 3, 4, 5, 6, 7]</span></span><br><span class="line"><span class="comment">// 利用find查找是否存在相同元素，如果不存在就push到数组里</span></span><br></pre></td></tr></table></figure></li><li><p>1.filter + indexOf</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">1</span>,<span class="number">2</span>];</span><br><span class="line"><span class="keyword">const</span> distinct = (arr) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> arr.filter((item,index) =&gt; &#123;</span><br><span class="line">        <span class="keyword">return</span> arr.indexOf(item) === index</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">console</span>.log(distinct(arr));<span class="comment">// [1, 2, 3, 4, 5]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 利用indexOf检测元素在数组中第一次出现的位置是否和元素现在的位置相等，如果不等则说明该元素是重复元素</span></span><br></pre></td></tr></table></figure></li><li><p>双重for循环</p></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> data = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">1</span>,<span class="number">2</span>];</span><br><span class="line"><span class="keyword">const</span> distinct = (arr) =&gt; &#123;</span><br><span class="line">     <span class="keyword">for</span>( <span class="keyword">let</span> i = <span class="number">0</span>; i &lt; arr.length; i++ )&#123;</span><br><span class="line">         <span class="keyword">for</span>(<span class="keyword">let</span> j = i + <span class="number">1</span>; j &lt; arr.length; j++)&#123;</span><br><span class="line">             <span class="keyword">if</span>(arr[i] === arr[j])&#123;</span><br><span class="line">                 arr.splice(j, <span class="number">1</span>);</span><br><span class="line">                 j--;</span><br><span class="line">             &#125;</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">return</span> arr;</span><br><span class="line">&#125;;</span><br><span class="line"> <span class="built_in">console</span>.log(distinct(data)); <span class="comment">// [1, 2, 3, 4, 5]</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">// 先定义一个包含原始数组第一个元素的数组，然后遍历原始数组，将原始数组中的每个元素与新数组中的每个元素进行比对，如果不重复则添加到新数组中，最后返回新数组</span></span><br></pre></td></tr></table></figure><ul><li><p>ES6 中的 Set 去重</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> data = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">1</span>,<span class="number">2</span>];</span><br><span class="line"><span class="keyword">const</span> distinct = (arr) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> [...new <span class="built_in">Set</span>(arr)]</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">console</span>.log(distinct(data)); <span class="comment">// [1, 2, 3, 4, 5]</span></span><br></pre></td></tr></table></figure></li><li><p>例子🌰</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line">   （携程）算法手写题</span><br><span class="line">    已知如下数组：</span><br><span class="line">    var arr = [ [1, 2, 2], [3, 4, 5, 5], [6, 7, 8, 9, [11, 12, [12, 13, [14] ] ] ], 10];</span><br><span class="line">    编写一个程序将数组扁平化并去除其中重复部分数据，最终得到一个升序且不重复的数组</span><br><span class="line">**/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> arr = [ [<span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>], [<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">5</span>], [<span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, [<span class="number">11</span>, <span class="number">12</span>, [<span class="number">12</span>, <span class="number">13</span>, [<span class="number">14</span>] ] ] ], <span class="number">10</span>];</span><br><span class="line"><span class="keyword">const</span> flat = (arr) =&gt; &#123; <span class="comment">// 扁平化数组</span></span><br><span class="line">    <span class="keyword">return</span> arr.reduce((prv, curr) =&gt; &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Array</span>.isArray(curr) ? prv.concat(flat(curr)) : prv.concat(curr) </span><br><span class="line">    &#125;,[])</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> newArr = flat(arr);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> removeRepeat = (arr) =&gt; &#123; <span class="comment">// 数组去重</span></span><br><span class="line">    <span class="keyword">return</span> arr.filter((item,index) =&gt; &#123;</span><br><span class="line">        <span class="keyword">return</span> arr.indexOf(item) === index</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> res = removeRepeat(newArr)</span><br><span class="line"><span class="built_in">console</span>.log(res.sort((a,b) =&gt; a - b))</span><br><span class="line"><span class="comment">// [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line">    简便解法：</span><br><span class="line">    Array.from( new Set( arr.flat(Infinity)) ).sort(( a, b )=&gt;a - b)</span><br><span class="line">**/</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 数组 </tag>
            
            <tag> 数组去重 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>十一、九宫格抽奖</title>
      <link href="/2020/01/10/11.%E4%B9%9D%E5%AE%AB%E6%A0%BC%E6%8A%BD%E5%A5%96/"/>
      <url>/2020/01/10/11.%E4%B9%9D%E5%AE%AB%E6%A0%BC%E6%8A%BD%E5%A5%96/</url>
      
        <content type="html"><![CDATA[<h2 id="九宫格抽奖"><a href="#九宫格抽奖" class="headerlink" title="九宫格抽奖"></a>九宫格抽奖</h2><a id="more"></a><p><img src="/images/lottery.png" alt></p><ul><li><p>1.js实现</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Lottery</span></span>&#123;</span><br><span class="line">    constructor(&#123;</span><br><span class="line">        startBtnEl,</span><br><span class="line">        giftAllEl,</span><br><span class="line">        prizeIndex,</span><br><span class="line">        delayTime,</span><br><span class="line">        animateTime,</span><br><span class="line">        clearActive,</span><br><span class="line">        _luckyTimes,</span><br><span class="line">        haveChange,</span><br><span class="line">        successCallback = () =&gt; &#123;&#125;</span><br><span class="line"></span><br><span class="line">    &#125;)&#123;</span><br><span class="line">        <span class="built_in">Object</span>.assign(<span class="keyword">this</span>,&#123;</span><br><span class="line">            startBtnEl, <span class="comment">//  开始按钮</span></span><br><span class="line">            giftAllEl, <span class="comment">// 所有奖品公共class</span></span><br><span class="line">            prizeIndex: prizeIndex || <span class="string">'谢谢参与'</span>, <span class="comment">// 抽中奖品下标</span></span><br><span class="line">            _luckyTimes: _luckyTimes || <span class="number">0</span>, <span class="comment">// 抽奖次数</span></span><br><span class="line">            delayTime: delayTime || <span class="number">3000</span>, <span class="comment">// 延时多少秒得到结果</span></span><br><span class="line">            animateTime: animateTime || <span class="number">200</span>, <span class="comment">// 动画时间</span></span><br><span class="line">            clearActive: clearActive || <span class="literal">true</span>, <span class="comment">// 清除状态</span></span><br><span class="line">            haveChange: haveChange || <span class="literal">false</span>, <span class="comment">// 是否还有抽奖机会</span></span><br><span class="line">            successCallback <span class="comment">// 抽中奖品回调</span></span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="keyword">this</span>.$prizeItemsEl = <span class="literal">null</span>, <span class="comment">// 奖品</span></span><br><span class="line">        <span class="keyword">this</span>.lotteryPrizeIndex = <span class="number">0</span>, <span class="comment">// 九宫格对应下标</span></span><br><span class="line">        <span class="keyword">this</span>.timer = <span class="literal">null</span>, <span class="comment">// 定时器</span></span><br><span class="line">        <span class="keyword">this</span>.init()</span><br><span class="line">    &#125;</span><br><span class="line">    init()&#123;</span><br><span class="line">        <span class="keyword">this</span>.$lotteryStartEl = <span class="built_in">document</span>.querySelector(<span class="keyword">this</span>.startBtnEl) </span><br><span class="line">        <span class="keyword">this</span>.$prizeItemsEl = <span class="built_in">document</span>.querySelectorAll(<span class="keyword">this</span>.giftAllEl) <span class="comment">// 🏅奖品</span></span><br><span class="line">        <span class="keyword">this</span>.initStartEvent()</span><br><span class="line">    &#125;</span><br><span class="line">    initStartEvent()&#123;</span><br><span class="line">        <span class="keyword">let</span> haveChange = <span class="keyword">this</span>.haveChange;</span><br><span class="line">        <span class="keyword">const</span> el = <span class="keyword">this</span>.$lotteryStartEl</span><br><span class="line">        el.onclick = () =&gt; &#123;</span><br><span class="line">            <span class="keyword">if</span> (!el.classList.contains(<span class="string">'disabled'</span>) ) &#123;</span><br><span class="line">                <span class="keyword">this</span>.setStartBtnStatus(<span class="literal">true</span>)</span><br><span class="line">                <span class="keyword">if</span> (haveChange) &#123;</span><br><span class="line">                    <span class="comment">// 有抽奖机会，得到抽奖结果</span></span><br><span class="line">                    <span class="keyword">this</span>.getTargetPrize()</span><br><span class="line">                    <span class="keyword">this</span>.handleStartAnimate()</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="comment">// 没有抽奖机会了</span></span><br><span class="line">                    <span class="built_in">console</span>.log(<span class="string">'没有抽奖机会了'</span>)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 开始抽奖动画</span></span><br><span class="line">    handleStartAnimate()&#123;</span><br><span class="line">        <span class="keyword">this</span>.lotteryPrizeIndex = <span class="number">0</span></span><br><span class="line">        <span class="keyword">this</span>.timer = setInterval(() =&gt; &#123;</span><br><span class="line">            <span class="keyword">this</span>.lotteryPrizeIndex = <span class="keyword">this</span>.lotteryPrizeIndex === <span class="number">8</span> ? <span class="number">1</span> : <span class="keyword">this</span>.lotteryPrizeIndex + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">this</span>.addPrizeMask();</span><br><span class="line">            <span class="comment">// 这里很巧妙，lottery-prize_item_index 和html一致</span></span><br><span class="line">            <span class="built_in">document</span>.querySelector(<span class="string">`.lottery-prize_item_<span class="subst">$&#123;this.lotteryPrizeIndex&#125;</span>`</span>).classList.remove(<span class="string">'mask'</span>)</span><br><span class="line">        &#125;, <span class="keyword">this</span>.animateTime)</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.timer</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 添加所有奖品的遮罩状态</span></span><br><span class="line">    addPrizeMask()&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>, l = <span class="keyword">this</span>.$prizeItemsEl.length; i &lt; l; i++) &#123;</span><br><span class="line">            <span class="keyword">this</span>.$prizeItemsEl[i].classList.add(<span class="string">'mask'</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 清除所有奖品的遮罩状态</span></span><br><span class="line">    clearPrizeActive () &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>, l = <span class="keyword">this</span>.$prizeItemsEl.length; i &lt; l; i++) &#123;</span><br><span class="line">            <span class="keyword">this</span>.$prizeItemsEl[i].classList.remove(<span class="string">'mask'</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 抽奖结果</span></span><br><span class="line">    getTargetPrize()&#123;</span><br><span class="line">        <span class="comment">// 模拟随机得到一个结果</span></span><br><span class="line">        <span class="keyword">let</span> prizeIndex = <span class="keyword">this</span>.prizeIndex;</span><br><span class="line">        <span class="keyword">if</span>(prizeIndex == <span class="string">'谢谢参与'</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(prizeIndex == <span class="number">0</span> || prizeIndex == <span class="number">9</span>)&#123;</span><br><span class="line">            prizeIndex = <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 延时几秒得到结果</span></span><br><span class="line">        setTimeout(() =&gt; &#123;</span><br><span class="line">            <span class="keyword">typeof</span> <span class="keyword">this</span>.successCallback === <span class="string">'function'</span> &amp;&amp; <span class="keyword">this</span>.successCallback(prizeIndex)</span><br><span class="line">            <span class="keyword">this</span>.stopPrizeAnimate(prizeIndex)</span><br><span class="line">        &#125;, <span class="keyword">this</span>.delayTime)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 关闭抽奖动画</span></span><br><span class="line">    stopPrizeAnimate(index)&#123;</span><br><span class="line">        <span class="keyword">if</span> (index) &#123;</span><br><span class="line">            <span class="keyword">let</span> stopTimer = <span class="literal">null</span></span><br><span class="line">            stopTimer = setInterval(() =&gt; &#123;</span><br><span class="line">                <span class="keyword">if</span> (index === <span class="keyword">this</span>.lotteryPrizeIndex ) &#123;</span><br><span class="line">                    clearInterval(stopTimer)</span><br><span class="line">                    clearInterval(<span class="keyword">this</span>.timer)</span><br><span class="line">                    <span class="keyword">this</span>.setStartBtnStatus()</span><br><span class="line">                    <span class="keyword">if</span> (<span class="keyword">this</span>.clearActive) &#123;</span><br><span class="line">                        <span class="comment">//this.clearPrizeActive()</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, <span class="number">100</span>)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">this</span>.setStartBtnStatus()</span><br><span class="line">            clearInterval(<span class="keyword">this</span>.timer)</span><br><span class="line">            <span class="keyword">this</span>.clearPrizeActive()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 按钮状态</span></span><br><span class="line">    setStartBtnStatus (status) &#123;</span><br><span class="line">        <span class="keyword">if</span> (status) &#123;</span><br><span class="line">            <span class="keyword">this</span>.$lotteryStartEl.classList.add(<span class="string">'disabled'</span>)</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">this</span>._luckyTimes) &#123; </span><br><span class="line">            <span class="keyword">this</span>.$lotteryStartEl.classList.remove(<span class="string">'disabled'</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Lottery(&#123;</span><br><span class="line">    startBtnEl: <span class="string">'.J_lottery-start'</span>,</span><br><span class="line">    giftAllEl: <span class="string">'.lottery-prize_item'</span>,</span><br><span class="line">    prizeIndex:<span class="number">2</span> ,</span><br><span class="line">    haveChange: <span class="literal">true</span>,</span><br><span class="line">    _luckyTimes: <span class="number">2</span>,</span><br><span class="line">    successCallback(prizeIndex)&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'prizeIndex---&gt;'</span>,prizeIndex)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>2.html结构</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"lottery-prize_items"</span>&gt;</span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"lottery-prize_item lottery-prize_item_1"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">img</span> <span class="attribute">src</span>=<span class="value">"./下载.jpeg"</span> <span class="attribute">alt</span>=<span class="value">""</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"lottery-prize_item lottery-prize_item_2"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">img</span> <span class="attribute">src</span>=<span class="value">"./下载.jpeg"</span> <span class="attribute">alt</span>=<span class="value">""</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"lottery-prize_item lottery-prize_item_3"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">img</span> <span class="attribute">src</span>=<span class="value">"./下载.jpeg"</span> <span class="attribute">alt</span>=<span class="value">""</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"lottery-prize_item lottery-prize_item_8"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">img</span> <span class="attribute">src</span>=<span class="value">"./下载.jpeg"</span> <span class="attribute">alt</span>=<span class="value">""</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"lottery-start J_lottery-start "</span>&gt;</span>GO! <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"lottery-prize_item lottery-prize_item_4"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">img</span> <span class="attribute">src</span>=<span class="value">"./下载.jpeg"</span> <span class="attribute">alt</span>=<span class="value">""</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"lottery-prize_item lottery-prize_item_7"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">img</span> <span class="attribute">src</span>=<span class="value">"./下载.jpeg"</span> <span class="attribute">alt</span>=<span class="value">""</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"lottery-prize_item lottery-prize_item_6"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">img</span> <span class="attribute">src</span>=<span class="value">"./下载.jpeg"</span> <span class="attribute">alt</span>=<span class="value">""</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"lottery-prize_item lottery-prize_item_5"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">img</span> <span class="attribute">src</span>=<span class="value">"./下载.jpeg"</span> <span class="attribute">alt</span>=<span class="value">""</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure></li><li><p>3.css</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">*&#123;margin: 0; padding: 0;&#125;</span><br><span class="line">    .lottery-prize_items&#123;</span><br><span class="line">        width: 430px; </span><br><span class="line">        height:400px;</span><br><span class="line">        display: flex;</span><br><span class="line">        flex-wrap: wrap;</span><br><span class="line">        justify-content: space-between;</span><br><span class="line">        align-content: space-between;</span><br><span class="line">        padding: 20px;</span><br><span class="line">        background-color: #446CD3;</span><br><span class="line">        border-radius: 5px;</span><br><span class="line">    &#125;</span><br><span class="line">    .lottery-prize_items .lottery-prize_item, .lottery-prize_items .lottery-start&#123;</span><br><span class="line">        width: 120px;</span><br><span class="line">        height: 120px;</span><br><span class="line">        background: #D2DAFF;</span><br><span class="line">        background: #fff;</span><br><span class="line">        border-radius: 5px;</span><br><span class="line">        position: relative;</span><br><span class="line">        display: flex;</span><br><span class="line">        align-items: center;</span><br><span class="line">        justify-content: center;</span><br><span class="line">        user-select: none;</span><br><span class="line">        overflow: hidden;</span><br><span class="line">    &#125;</span><br><span class="line">    .lottery-prize_items  .mask:after&#123;</span><br><span class="line">        display: block;</span><br><span class="line">        content: '';</span><br><span class="line">        position: absolute;</span><br><span class="line">        top: 0;</span><br><span class="line">        left: 0;</span><br><span class="line">        width: 100%;</span><br><span class="line">        height: 120px;</span><br><span class="line">        background: rgba(94, 139, 255, 0.4);</span><br><span class="line">        border-radius: 5px;</span><br><span class="line">    &#125;</span><br><span class="line">    .lottery-prize_items .disabled&#123;</span><br><span class="line">        background: #C4C6CA;</span><br><span class="line">        color: #fff;</span><br><span class="line">    &#125;</span><br><span class="line">    .lottery-prize_items .lottery-prize_item img&#123;</span><br><span class="line">        width: 120px;</span><br><span class="line">        height: 120px;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> lottery </tag>
            
            <tag> 抽奖 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>十、节日头像小挂件</title>
      <link href="/2020/01/05/10.%E8%8A%82%E6%97%A5%E5%A4%B4%E5%83%8F%E5%B0%8F%E6%8C%82%E4%BB%B6/"/>
      <url>/2020/01/05/10.%E8%8A%82%E6%97%A5%E5%A4%B4%E5%83%8F%E5%B0%8F%E6%8C%82%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h2 id="实现思路："><a href="#实现思路：" class="headerlink" title="实现思路："></a>实现思路：</h2><p><a href="https://juejin.im/post/5e00f66751882512773663dd" target="_blank" rel="external">参考大佬链接</a><br><img src="/images/christmas.png" alt="效果"></p><p>上传的头像和小挂件要匹配到一起，利用canvas生成图片，并下载。</p><a id="more"></a><h2 id="实现代码"><a href="#实现代码" class="headerlink" title="实现代码"></a>实现代码</h2><ul><li>首先把html写好，再加上一顿CSS操作，样式如下<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// html</span></span><br><span class="line"><span class="keyword">const</span> &#123; targetUrl, loading &#125; = <span class="keyword">this</span>.state;</span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="title">div</span> <span class="attribute">className</span>=<span class="value">&#123;</span> `$&#123;<span class="attribute">styleCss.avatarBox</span>&#125; ` &#125;&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">div</span> <span class="attribute">className</span>=<span class="value">&#123;</span> `$&#123;<span class="attribute">styleCss.avatar_main</span>&#125; $&#123;<span class="attribute">loading</span> ? <span class="attribute">styleCss.loader</span> <span class="attribute">:</span> ''&#125;` &#125;&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">img</span> <span class="attribute">onClick</span>=<span class="value">&#123;</span> () =&gt;</span> this.handleArrowChange('LEFT') &#125; className=&#123; styleCss.arrowLeft &#125; src=&#123; require('@/assets/img/avatar/arrowLeft.svg') &#125; alt=""/&gt;</span><br><span class="line"><span class="tag">&lt;<span class="title">img</span> <span class="attribute">onClick</span>=<span class="value">&#123;</span> () =&gt;</span> this.handleArrowChange('RIGHT') &#125;  className=&#123; styleCss.arrowRight &#125; src=&#123; require('@/assets/img/avatar/arrowRight.svg') &#125; alt=""/&gt;</span><br><span class="line"><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"file"</span>   <span class="attribute">accept</span>=<span class="value">"image/*"</span> <span class="attribute">onChange</span>=<span class="value">&#123;</span> (<span class="attribute">e</span>) =&gt;</span> this.handleUploadImgInit(e) &#125;/&gt;</span><br><span class="line"><span class="tag">&lt;<span class="title">img</span> <span class="attribute">src</span>=<span class="value">&#123;</span> <span class="attribute">targetUrl</span> &#125; <span class="attribute">alt</span>=<span class="value">""</span> <span class="attribute">className</span>=<span class="value">&#123;</span> <span class="attribute">styleCss.avatar_target</span> &#125;/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="title">canvas</span> <span class="attribute">className</span>=<span class="value">&#123;</span> <span class="attribute">styleCss.canvas</span> &#125; <span class="attribute">ref</span>=<span class="value">"canvas"</span> /&gt;</span></span></span><br></pre></td></tr></table></figure></li></ul><p><img src="/images/christmas1.png" alt></p><h3 id="核心代码"><a href="#核心代码" class="headerlink" title="核心代码"></a>核心代码</h3><ul><li><p>1、定义相关变量</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> CANVANS_SIZE = <span class="number">256</span>;</span><br><span class="line"><span class="comment">// 小挂件数组,style位置和大小信息需要自己试验一下</span></span><br><span class="line"><span class="keyword">const</span> imgSourceList = [&#123;</span><br><span class="line">    source: <span class="built_in">require</span>(<span class="string">'@/assets/img/avatar/1.png'</span>),</span><br><span class="line">    style: &#123;</span><br><span class="line">        width: <span class="number">108</span>,</span><br><span class="line">        height: <span class="number">88</span>,</span><br><span class="line">        top: <span class="string">`<span class="subst">$&#123;CANVANS_SIZE - 88&#125;</span>`</span>,</span><br><span class="line">        left: <span class="string">`<span class="subst">$&#123;CANVANS_SIZE - 108&#125;</span>`</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;, &#123;</span><br><span class="line">    source: <span class="built_in">require</span>(<span class="string">'@/assets/img/avatar/2.png'</span>),</span><br><span class="line">    style: &#123;</span><br><span class="line">        width: <span class="number">128</span>,</span><br><span class="line">        height: <span class="number">128</span>,</span><br><span class="line">        top: <span class="string">`<span class="subst">$&#123;CANVANS_SIZE - 108&#125;</span>`</span>,</span><br><span class="line">        left: <span class="string">`<span class="subst">$&#123;CANVANS_SIZE - 118&#125;</span>`</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;, &#123;</span><br><span class="line">    source: <span class="built_in">require</span>(<span class="string">'@/assets/img/avatar/3.png'</span>),</span><br><span class="line">    style: &#123;</span><br><span class="line">        width: <span class="number">96</span>,</span><br><span class="line">        height: <span class="number">108</span>,</span><br><span class="line">        top: <span class="string">`<span class="subst">$&#123;CANVANS_SIZE - 128&#125;</span>`</span>,</span><br><span class="line">        left: <span class="string">`<span class="subst">$&#123;CANVANS_SIZE - 86&#125;</span>`</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;, &#123;</span><br><span class="line">    source: <span class="built_in">require</span>(<span class="string">'@/assets/img/avatar/4.png'</span>),</span><br><span class="line">    style: &#123;</span><br><span class="line">        width: CANVANS_SIZE,</span><br><span class="line">        height: <span class="number">226</span>,</span><br><span class="line">        top: -<span class="number">38</span>,</span><br><span class="line">        left: <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;, &#123;</span><br><span class="line">    source: <span class="built_in">require</span>(<span class="string">'@/assets/img/avatar/5.png'</span>),</span><br><span class="line">    style: &#123;</span><br><span class="line">        width: <span class="number">100</span>,</span><br><span class="line">        height: <span class="number">126</span>,</span><br><span class="line">        top: <span class="number">0</span>,</span><br><span class="line">        left: CANVANS_SIZE / <span class="number">3</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;];</span><br><span class="line"></span><br><span class="line"><span class="keyword">this</span>.state=&#123;</span><br><span class="line">    decorationCurrent: imgSourceList[<span class="number">0</span>], <span class="comment">// 小挂件1</span></span><br><span class="line">    decorationList: imgSourceList, <span class="comment">// 小挂件数组</span></span><br><span class="line">    currentIndex:<span class="number">0</span>, <span class="comment">// 当前挂件下标</span></span><br><span class="line">    loading:<span class="literal">false</span> <span class="comment">// 是否显示加载</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>2、初始化canvas</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"> componentDidMount()&#123;</span><br><span class="line">   <span class="keyword">const</span> &#123; decorationCurrent &#125; = <span class="keyword">this</span>.state;</span><br><span class="line">   <span class="comment">// 初始化挂载小挂件</span></span><br><span class="line">   <span class="keyword">this</span>.handleMakeImage(<span class="literal">null</span>, decorationCurrent).then(targetUrl =&gt; &#123;</span><br><span class="line">       <span class="keyword">this</span>.setState(&#123;</span><br><span class="line">           targetUrl</span><br><span class="line">       &#125;);</span><br><span class="line">   &#125;);</span><br><span class="line"><span class="comment">// 挂载canvas</span></span><br><span class="line">   <span class="keyword">this</span>.initCanvas();</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> initCanvas() &#123;</span><br><span class="line">   <span class="keyword">const</span> &#123; canvas &#125; = <span class="keyword">this</span>.refs;</span><br><span class="line">   canvas.width = CANVANS_SIZE;</span><br><span class="line">   canvas.height = CANVANS_SIZE;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></li><li><p>3、上传图片</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">async</span> handleUploadImgInit(e)&#123;</span><br><span class="line">   <span class="keyword">const</span> _this = <span class="keyword">this</span>;</span><br><span class="line">   <span class="keyword">const</span> target = e.target;</span><br><span class="line">   <span class="keyword">const</span> &#123; canvas &#125; = <span class="keyword">this</span>.refs;</span><br><span class="line">   <span class="keyword">const</span> &#123; decorationCurrent &#125; = <span class="keyword">this</span>.state;</span><br><span class="line">   <span class="keyword">const</span> context = canvas.getContext(<span class="string">'2d'</span>);</span><br><span class="line">   <span class="keyword">const</span> files = e.target.files[<span class="number">0</span>]; <span class="comment">// 上传的图片</span></span><br><span class="line">   <span class="keyword">const</span> base64Url = <span class="keyword">await</span> <span class="keyword">this</span>.handleBase64Img(files);</span><br><span class="line">   <span class="keyword">const</span> imgObj = <span class="keyword">await</span> <span class="keyword">this</span>.createImage(base64Url);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 调整用户图片尺寸</span></span><br><span class="line"><span class="comment">// 无论宽大于高还是宽小于高，都会进行等比缩放</span></span><br><span class="line">   <span class="keyword">const</span> type = imgObj.width - imgObj.height;</span><br><span class="line">   <span class="keyword">if</span> (type &gt; <span class="number">0</span>) &#123; <span class="comment">// 宽 &gt; 高</span></span><br><span class="line">       <span class="keyword">const</span> w = imgObj.width * CANVANS_SIZE / imgObj.height;</span><br><span class="line">       context.drawImage(imgObj, <span class="number">0</span>, <span class="number">0</span>, w, CANVANS_SIZE);</span><br><span class="line">   &#125; <span class="keyword">else</span> <span class="keyword">if</span> (type &lt; <span class="number">0</span>) &#123; <span class="comment">// 宽 &lt; 高</span></span><br><span class="line">       <span class="keyword">const</span> h = imgObj.height * CANVANS_SIZE / imgObj.width;</span><br><span class="line">       context.drawImage(imgObj, <span class="number">0</span>, <span class="number">0</span>, CANVANS_SIZE, h);</span><br><span class="line">   &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">       context.drawImage(imgObj, <span class="number">0</span>, <span class="number">0</span>, CANVANS_SIZE, CANVANS_SIZE);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// canvas转图片</span></span><br><span class="line">   <span class="keyword">const</span> imgUrl = canvas.toDataURL(<span class="string">'image/png'</span>);</span><br><span class="line">   <span class="keyword">this</span>.setState(&#123;</span><br><span class="line">       imgUrl:imgUrl</span><br><span class="line">   &#125;,() =&gt; &#123;</span><br><span class="line">       target.value = <span class="string">''</span>; <span class="comment">// 可以重复上传同一张图片</span></span><br><span class="line">   &#125;)</span><br><span class="line"></span><br><span class="line">   <span class="keyword">this</span>.handleMakeImage(imgUrl, decorationCurrent).then(targetUrl =&gt; &#123;</span><br><span class="line">       <span class="keyword">this</span>.setState(&#123;</span><br><span class="line">           targetUrl</span><br><span class="line">       &#125;);</span><br><span class="line">   &#125;);</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">// 上传图片base64转化</span></span><br><span class="line"> handleBase64Img(files)&#123;</span><br><span class="line">     <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>((resolve,reject) =&gt; &#123;</span><br><span class="line">         <span class="keyword">let</span> reads = <span class="keyword">new</span> FileReader();</span><br><span class="line">         reads.readAsDataURL(files);</span><br><span class="line">         reads.onload = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">             resolve(<span class="keyword">this</span>.result);</span><br><span class="line">         &#125;;</span><br><span class="line">     &#125;)</span><br><span class="line">     </span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">// 创建图片</span></span><br><span class="line"> createImage(imgUrl) &#123;</span><br><span class="line">     <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>((resolve, rejest) =&gt; &#123;</span><br><span class="line">         <span class="keyword">const</span> imgObj = <span class="keyword">new</span> Image();</span><br><span class="line">         imgObj.src = imgUrl;</span><br><span class="line">         imgObj.onload = (e) =&gt; &#123;</span><br><span class="line">             resolve(imgObj);</span><br><span class="line">         &#125;;</span><br><span class="line">     &#125;);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></li><li><p>4、把头像和挂件组合在一起，生成图片链接（关键）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line"> *  @param &#123; string &#125; imgUrl -- 处理的用户图片url</span><br><span class="line"> *  @param &#123; object &#125; decorationCurrent -- 小挂件</span><br><span class="line"> * */</span> </span><br><span class="line"><span class="keyword">async</span> handleMakeImage(imgUrl, decorationCurrent)&#123;</span><br><span class="line">  <span class="keyword">if</span> (!(imgUrl || decorationCurrent)) &#123; <span class="keyword">return</span> <span class="string">''</span>; &#125;</span><br><span class="line">  <span class="keyword">const</span> &#123; source, style &#125; = decorationCurrent;</span><br><span class="line">  <span class="keyword">const</span> &#123; width, height, top, left &#125; = style;</span><br><span class="line">  <span class="keyword">const</span> &#123; canvas &#125; = <span class="keyword">this</span>.refs;</span><br><span class="line">  <span class="keyword">this</span>.clearCanvas(canvas);</span><br><span class="line">  <span class="keyword">const</span> context = canvas.getContext(<span class="string">'2d'</span>);</span><br><span class="line">  <span class="keyword">if</span> (imgUrl) &#123;</span><br><span class="line">      <span class="keyword">const</span> bgImg = <span class="keyword">await</span> <span class="keyword">this</span>.createImage(imgUrl);</span><br><span class="line">      context.drawImage(bgImg, <span class="number">0</span>, <span class="number">0</span>, bgImg.width, bgImg.height);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (decorationCurrent &amp;&amp; source) &#123;</span><br><span class="line">      <span class="keyword">const</span> imgObj = <span class="keyword">await</span> <span class="keyword">this</span>.createImage(source);</span><br><span class="line">      context.drawImage(imgObj, left, top, width, height);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">const</span> targetUrl = canvas.toDataURL(<span class="string">'image/png'</span>);</span><br><span class="line">  <span class="keyword">return</span> targetUrl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">clearCanvas(targetCanvans) &#123;</span><br><span class="line">    <span class="keyword">let</span> ctx = targetCanvans.getContext(<span class="string">'2d'</span>);</span><br><span class="line">    ctx.clearRect(<span class="number">0</span>, <span class="number">0</span>, targetCanvans.width, targetCanvans.height);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>5、左右切换小挂件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">handleArrowChange(type)&#123;</span><br><span class="line">      <span class="keyword">const</span> &#123; decorationList  &#125; = <span class="keyword">this</span>.state;</span><br><span class="line">      <span class="keyword">const</span> length = decorationList.length - <span class="number">1</span>;</span><br><span class="line">      <span class="keyword">let</span> index = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">this</span>.setState((prvState) =&gt;&#123;</span><br><span class="line">          <span class="keyword">if</span>(type === <span class="string">'LEFT'</span>)&#123; <span class="comment">// 左</span></span><br><span class="line">              index = --prvState.currentIndex &lt; <span class="number">0</span>  ? length : prvState.currentIndex;</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123; <span class="comment">// 右</span></span><br><span class="line">              index = ++prvState.currentIndex &gt; length ? <span class="number">0</span> : prvState.currentIndex;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">return</span> &#123;</span><br><span class="line">              loading:<span class="literal">true</span>,</span><br><span class="line">              currentIndex:index,</span><br><span class="line">              decorationCurrent: imgSourceList[index],</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;, () =&gt; &#123;</span><br><span class="line">          <span class="keyword">const</span> &#123; imgUrl, decorationCurrent&#125; = <span class="keyword">this</span>.state;</span><br><span class="line">          <span class="keyword">this</span>.handleMakeImage(imgUrl, decorationCurrent).then(targetUrl =&gt; &#123;</span><br><span class="line">              <span class="keyword">this</span>.setState(&#123;</span><br><span class="line">                  targetUrl,</span><br><span class="line">                  loading:<span class="literal">false</span>,</span><br><span class="line">              &#125;);</span><br><span class="line">          &#125;);</span><br><span class="line">      &#125;)</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> canvas </tag>
            
            <tag> 小挂件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>九、将具有相同属性的对象合并到一个数组中</title>
      <link href="/2020/01/01/9.%E5%B1%9E%E6%80%A7%E5%90%88%E5%B9%B6/"/>
      <url>/2020/01/01/9.%E5%B1%9E%E6%80%A7%E5%90%88%E5%B9%B6/</url>
      
        <content type="html"><![CDATA[<h2 id="将具有相同属性的对象合并到一个数组中"><a href="#将具有相同属性的对象合并到一个数组中" class="headerlink" title="将具有相同属性的对象合并到一个数组中"></a>将具有相同属性的对象合并到一个数组中</h2><a id="more"></a><p>新年新气象，新的一年，继续加油。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> data = [</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">'group_name'</span>:<span class="string">'A'</span>,</span><br><span class="line">        <span class="string">'type'</span>: <span class="string">'apple'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">'group_name'</span>:<span class="string">'A'</span>,</span><br><span class="line">        <span class="string">'type'</span>: <span class="string">'almond'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">'group_name'</span>:<span class="string">'B'</span>,</span><br><span class="line">        <span class="string">'type'</span>: <span class="string">'banana'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">'group_name'</span>:<span class="string">'B'</span>,</span><br><span class="line">        <span class="string">'type'</span>: <span class="string">'bennet'</span></span><br><span class="line">    &#125;</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="comment">//代码实现</span></span><br><span class="line"><span class="comment">// &#123; group_name, type &#125; = currValue</span></span><br><span class="line"><span class="keyword">const</span> res = data.reduce( (prv, &#123; group_name, type &#125; ) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> exist = prv.find(item =&gt; item.group_name == group_name);</span><br><span class="line">    <span class="keyword">if</span> (exist) &#123;</span><br><span class="line">        exist[<span class="string">"data"</span>].push(&#123;</span><br><span class="line">            group_name:group_name,</span><br><span class="line">            type:type</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        prv.push(&#123; group_name, data: [&#123;</span><br><span class="line">            group_name:group_name,</span><br><span class="line">            type:type</span><br><span class="line">        &#125;]&#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> prv;</span><br><span class="line">&#125;, []);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(res)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 打印结果如下：</span></span><br><span class="line">[</span><br><span class="line">    &#123;  </span><br><span class="line">       <span class="string">'group_name'</span>:A,</span><br><span class="line">        data:[</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="string">'group_name'</span>:<span class="string">'A'</span>,</span><br><span class="line">                <span class="string">'type'</span>: <span class="string">'apple'</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="string">'group_name'</span>:<span class="string">'A'</span>,</span><br><span class="line">                <span class="string">'type'</span>: <span class="string">'almond'</span></span><br><span class="line">            &#125;,</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;  </span><br><span class="line">        <span class="string">'group_name'</span>:B,</span><br><span class="line">         data:[</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="string">'group_name'</span>:<span class="string">'B'</span>,</span><br><span class="line">                <span class="string">'type'</span>: <span class="string">'banana'</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="string">'group_name'</span>:<span class="string">'B'</span>,</span><br><span class="line">                <span class="string">'type'</span>: <span class="string">'bennet'</span></span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> reduce </tag>
            
            <tag> 数组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>八、扁平化数组</title>
      <link href="/2019/12/30/8.%E6%89%81%E5%B9%B3%E5%8C%96%E6%95%B0%E7%BB%84/"/>
      <url>/2019/12/30/8.%E6%89%81%E5%B9%B3%E5%8C%96%E6%95%B0%E7%BB%84/</url>
      
        <content type="html"><![CDATA[<h2 id="一：Array-prototype-flat"><a href="#一：Array-prototype-flat" class="headerlink" title="一：Array.prototype.flat()"></a>一：Array.prototype.flat()</h2><a id="more"></a><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,[<span class="number">7</span>,<span class="number">8</span>]],<span class="number">9</span>,<span class="number">10</span>];</span><br><span class="line"><span class="comment">// 不传参数时，默认“拉平”一层</span></span><br><span class="line">arr.flat();</span><br><span class="line"><span class="comment">// // [1, 2, 3, 4, 5, 6, [7,8], 9, 10]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 传入一个整数参数，整数即“拉平”的层数</span></span><br><span class="line">arr.flat(<span class="number">2</span>);</span><br><span class="line"><span class="comment">// // [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Infinity 关键字作为参数时，无论多少层嵌套，都会转为一维数组</span></span><br><span class="line"><span class="comment">// Infinity(无穷大)在 JS 中是一个特殊的数字，它的特性是：它比任何有限的数字都大。</span></span><br><span class="line">arr.flat(<span class="literal">Infinity</span>);</span><br><span class="line"> <span class="comment">// [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 传入 &lt;=0 的整数将返回原数组，不“拉平”</span></span><br><span class="line">arr.flat(<span class="number">0</span>);</span><br><span class="line">arr.flat(-<span class="number">10</span>);</span><br><span class="line"> <span class="comment">// [1,2,3,[4,5,6,[7,8]],9,10]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//如果原数组有空位，flat()方法会过滤空位</span></span><br><span class="line">[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,,].flat()</span><br><span class="line"><span class="comment">// [1, 2, 3]</span></span><br></pre></td></tr></table></figure><h2 id="二：其他方法实现"><a href="#二：其他方法实现" class="headerlink" title="二：其他方法实现"></a>二：其他方法实现</h2><h3 id="1-reduce"><a href="#1-reduce" class="headerlink" title="1.reduce"></a>1.reduce</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> flat = (arr) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> arr.reduce((prv,cur) =&gt; &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Array</span>.isArray(cur) ? prv.concat(flat(cur)) : prv.concat(cur) </span><br><span class="line">    &#125;,[])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-使用栈的思想实现-flat-函数"><a href="#2-使用栈的思想实现-flat-函数" class="headerlink" title="2.使用栈的思想实现 flat 函数"></a>2.使用栈的思想实现 flat 函数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">const flat = (arr) =&gt; &#123;</span><br><span class="line">    const stack = [...arr];</span><br><span class="line">    const res = [];</span><br><span class="line">    <span class="keyword">while</span>( stack.length )&#123;</span><br><span class="line">        const next = stack.pop();</span><br><span class="line">        <span class="keyword">if</span>(Array.isArray(next))&#123;</span><br><span class="line">            stack.push(...next);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            res.push(next)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">return</span> res.reverse();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-通过传入整数参数控制“拉平”层数"><a href="#3-通过传入整数参数控制“拉平”层数" class="headerlink" title="3.通过传入整数参数控制“拉平”层数"></a>3.通过传入整数参数控制“拉平”层数</h3> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">const flat = (arr, num = <span class="number">1</span>) =&gt; &#123;</span><br><span class="line">    <span class="built_in">return</span> num &gt; <span class="number">0</span> ?</span><br><span class="line">        arr.reduce(</span><br><span class="line">        (pre, cur) =&gt; pre.concat(Array.isArray(cur) ? flat(cur, num - <span class="number">1</span>) : cur),[])</span><br><span class="line">    :</span><br><span class="line">    arr.slice()</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#const arr = [1,2,3,[1,2,3,4, [2,3,4]]];</span></span><br><span class="line"><span class="comment">#flat(arr,Infinity)</span></span><br></pre></td></tr></table></figure><p><a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/flat" target="_blank" rel="external">MDN参考链接</a></p><p><a href="https://juejin.im/post/5dff18a4e51d455804256d31" target="_blank" rel="external">其他参考</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> flat </tag>
            
            <tag> 扁平化数组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>七、不刷新修改url链接</title>
      <link href="/2019/12/25/7.%E4%B8%8D%E5%88%B7%E6%96%B0%E4%BF%AE%E6%94%B9url%E9%93%BE%E6%8E%A5/"/>
      <url>/2019/12/25/7.%E4%B8%8D%E5%88%B7%E6%96%B0%E4%BF%AE%E6%94%B9url%E9%93%BE%E6%8E%A5/</url>
      
        <content type="html"><![CDATA[<p>有一个这样的需求，点击分页，不刷新页面。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//我们的page参数是记录在url里的： https://xxx.html?page=1</span></span><br><span class="line"><span class="comment">//如果采取硬拼接的方式，无疑会刷新页面</span></span><br><span class="line"><span class="built_in">window</span>.location.href = <span class="built_in">window</span>.location.pathname + <span class="string">`?page=<span class="subst">$&#123;page&#125;</span>`</span></span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="1-pushState-方法"><a href="#1-pushState-方法" class="headerlink" title="1.pushState() 方法"></a>1.pushState() 方法</h2><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/History_API" target="_blank" rel="external">MDN链接</a><br>一个状态对象, 一个标题 (目前被忽略), 和 (可选的) 一个URL. 让我们来解释下这三个参数详细内容：：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- 状态对象 — 状态对象state是一个JavaScript对象，通过pushState () 创建新的历史记录条目。无论什么时候用户导航到新的状态，popstate事件就会被触发，且该事件的state属性包含该历史记录条目状态对象的副本</span><br><span class="line">- 标题 — Firefox 目前忽略这个参数，但未来可能会用到。在此处传一个空字符串应该可以安全的防范未来这个方法的更改。或者，你可以为跳转的state传递一个短标题</span><br><span class="line">- URL — 该参数定义了新的历史URL记录。注意，调用 pushState() 后浏览器并不会立即加载这个URL，但可能会在稍后某些情况下加载这个URL，比如在用户重新打开浏览器时。新URL不必须为绝对路径。如果新URL是相对路径，那么它将被作为相对于当前URL处理。新URL必须与当前URL同源，否则 pushState() 会抛出一个异常。该参数是可选的，缺省为当前URL</span><br></pre></td></tr></table></figure><h2 id="2-pushState使用"><a href="#2-pushState使用" class="headerlink" title="2.pushState使用"></a>2.pushState使用</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> pageSize = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">const</span> url = <span class="string">`<span class="subst">$&#123;window.location.pathname&#125;</span>?page=<span class="subst">$&#123;pageSize&#125;</span>`</span></span><br><span class="line"><span class="built_in">window</span>.history.pushState(&#123;url: url&#125;, <span class="string">''</span>, url);</span><br></pre></td></tr></table></figure><p>以上就能实现页面无刷新修改url链接。</p><p>顺便放上获取和修改url的函数：</p><h2 id="3-获取和修改url的函数："><a href="#3-获取和修改url的函数：" class="headerlink" title="3.获取和修改url的函数："></a>3.获取和修改url的函数：</h2><h3 id="获取url参数"><a href="#获取url参数" class="headerlink" title="获取url参数"></a>获取url参数</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getParams</span> (<span class="params">name</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> reg = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"(^|&amp;)"</span> + name + <span class="string">"=([^&amp;]*)(&amp;|$)"</span>);</span><br><span class="line">    <span class="keyword">let</span> r = <span class="built_in">window</span>.location.search.substr(<span class="number">1</span>).match(reg);</span><br><span class="line">    <span class="keyword">if</span> (r != <span class="literal">null</span>) <span class="keyword">return</span> <span class="built_in">unescape</span>(r[<span class="number">2</span>]); <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="更改url参数"><a href="#更改url参数" class="headerlink" title="更改url参数"></a>更改url参数</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">replaceParamVal</span>(<span class="params">paramName,replaceWith</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> oUrl = <span class="built_in">window</span>.location.href.toString();</span><br><span class="line">    <span class="keyword">var</span> re = evil(<span class="string">'/('</span>+ paramName+<span class="string">'=)([^&amp;]*)/gi'</span>);</span><br><span class="line">    <span class="keyword">var</span> nUrl = oUrl.replace(re,paramName+<span class="string">'='</span>+replaceWith);</span><br><span class="line">    <span class="keyword">this</span>.location = nUrl;</span><br><span class="line">    <span class="built_in">window</span>.location.href=nUrl</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">evil</span>(<span class="params">fn</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> Fn = <span class="built_in">Function</span>; <span class="comment">//一个变量指向Function，防止有些前端编译工具报错</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> Fn(<span class="string">'return '</span> + fn)();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> pushState </tag>
            
            <tag> url </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>六、函数节流和防抖</title>
      <link href="/2019/12/23/6.%E5%87%BD%E6%95%B0%E8%8A%82%E6%B5%81%E5%92%8C%E9%98%B2%E6%8A%96/"/>
      <url>/2019/12/23/6.%E5%87%BD%E6%95%B0%E8%8A%82%E6%B5%81%E5%92%8C%E9%98%B2%E6%8A%96/</url>
      
        <content type="html"><![CDATA[<h2 id="1-节流"><a href="#1-节流" class="headerlink" title="1.节流"></a>1.节流</h2><p>核心思想: 如果在定时器的时间范围内再次触发，则不予理睬，等当前定时器完成，才能启动下一个定时器任务。</p><a id="more"></a> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> throttle = (fn, delay) =&gt; &#123;</span><br><span class="line">    <span class="keyword">let</span> flag = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">return</span> (...args) =&gt; &#123;</span><br><span class="line">        <span class="keyword">let</span> context = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">if</span> (!flag) <span class="keyword">return</span>;</span><br><span class="line">        flag = <span class="literal">false</span>;</span><br><span class="line">        setTimeout(() =&gt; &#123;</span><br><span class="line">            fn.apply(context, args);</span><br><span class="line">            flag = <span class="literal">true</span>;</span><br><span class="line">        &#125;, delay);</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="2-防抖"><a href="#2-防抖" class="headerlink" title="2.防抖"></a>2.防抖</h2><p> 核心思想: 每次事件触发都删除原来的定时器，建立新的定时器，反复触发函数，那么从最后一次触发开始计时。</p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> debounce = (fn, delay) =&gt; &#123;</span><br><span class="line">    <span class="keyword">let</span> timer = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">return</span>  (...args) =&gt; &#123;</span><br><span class="line">        <span class="keyword">let</span> context = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">if</span>(timer)&#123;  </span><br><span class="line">            clearTimeout(timer)</span><br><span class="line">        &#125;;</span><br><span class="line">        timer = setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            fn.apply(context, args);</span><br><span class="line">        &#125;, delay);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-合并"><a href="#3-合并" class="headerlink" title="3.合并"></a>3.合并</h2><p> 现在我们可以把防抖和节流放到一起，有时候触发的太频繁会导致一次响应都没有，我们希望到了固定的时间必须给用户一个响应。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span>  throttle = (fn, delay) =&gt; &#123;</span><br><span class="line">    <span class="keyword">let</span> flag = <span class="literal">true</span>, timer = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params">...args</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">let</span> context = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">if</span>( !flag )&#123; <span class="keyword">return</span> &#125;;  </span><br><span class="line">        clearTimeout(timer);</span><br><span class="line">        flag = <span class="literal">false</span>;</span><br><span class="line">        timer = setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            flag = <span class="literal">true</span>;</span><br><span class="line">            fn.apply(context, args);</span><br><span class="line">        &#125;, delay);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-实践-–-图片懒加载"><a href="#4-实践-–-图片懒加载" class="headerlink" title="4.实践 – 图片懒加载"></a>4.实践 – 图片懒加载</h2><h3 id="clientHeight-、scrollTop-、-offsetTop"><a href="#clientHeight-、scrollTop-、-offsetTop" class="headerlink" title="clientHeight 、scrollTop 、 offsetTop"></a>clientHeight 、scrollTop 、 offsetTop</h3><p>思路： 给img一个默认图片，以及data-src属性，当页面滚动到对应img元素的时候，把data-src赋值给src。<br> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//给img一个默认图片</span></span><br><span class="line">&lt;img src=<span class="string">"default.png"</span> data-src=<span class="string">"xxx/img.png"</span> /&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">//通过监听 scroll 事件来判断图片是否到达视口:</span></span><br><span class="line"><span class="keyword">let</span> img = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"img"</span>);</span><br><span class="line"><span class="keyword">let</span> num = img.length;</span><br><span class="line"><span class="keyword">let</span> count = <span class="number">0</span>; <span class="comment">//计数器，从第一张图片开始计</span></span><br><span class="line"></span><br><span class="line">lazyload(); <span class="comment">//首次加载</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">window</span>.addEventListener(<span class="string">'scroll'</span>, throttle(lazyload, <span class="number">200</span>)); <span class="comment">//节流</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">lazyload</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> viewHeight = <span class="built_in">document</span>.documentElement.clientHeight;<span class="comment">// 视口高度</span></span><br><span class="line">    <span class="keyword">let</span> scrollTop = <span class="built_in">document</span>.documentElement.scrollTop || <span class="built_in">document</span>.body.scrollTop;<span class="comment">//滚动条滚动的高度</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i = count; i &lt; num; i++) &#123;</span><br><span class="line">        <span class="comment">//元素现在已经出现在视口中</span></span><br><span class="line">        <span class="keyword">if</span>( img[i].offsetTop &lt; scrollHeight + viewHeight ) &#123;</span><br><span class="line">            <span class="keyword">if</span>(img[i].getAttribute(<span class="string">'src'</span>) !== <span class="string">'default.png'</span>) <span class="keyword">continue</span>; <span class="comment">//如果src不是default.png'，跳过循环，继续往下循环</span></span><br><span class="line">            img[i].src = img[i].getAttribute(<span class="string">"data-src"</span>);</span><br><span class="line">            count ++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//scrollTop + clientHeight === scrollHeight 即触发下拉加载的条件</span></span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
        <tags>
            
            <tag> 函数 </tag>
            
            <tag> 节流/防抖 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>五、js 深拷贝与浅拷贝</title>
      <link href="/2019/12/18/5.js%20%E6%B7%B1%E6%8B%B7%E8%B4%9D%E4%B8%8E%E6%B5%85%E6%8B%B7%E8%B4%9D/"/>
      <url>/2019/12/18/5.js%20%E6%B7%B1%E6%8B%B7%E8%B4%9D%E4%B8%8E%E6%B5%85%E6%8B%B7%E8%B4%9D/</url>
      
        <content type="html"><![CDATA[<h2 id="1-基本数据类型和引用数据类型"><a href="#1-基本数据类型和引用数据类型" class="headerlink" title="1.基本数据类型和引用数据类型"></a>1.基本数据类型和引用数据类型</h2><p> 数据分为基本数据类型和引用数据类型</p><p> 基本数据类型:</p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">String</span>、<span class="built_in">Number</span>、<span class="built_in">Boolean</span>、Null、Undefined、<span class="built_in">Symbol</span>、BigInt(?)</span><br></pre></td></tr></table></figure><p> 引用数据类型:</p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Array</span>、<span class="built_in">Object</span></span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="2-概念"><a href="#2-概念" class="headerlink" title="2.概念"></a>2.概念</h2><p> 浅拷贝：</p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">仅仅复制对象的引用，而不是对象本身</span><br></pre></td></tr></table></figure><p> 深拷贝：</p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">把复制的对象所引用的全部对象都复制一遍</span><br></pre></td></tr></table></figure><p>简单来说，浅拷贝就是这个人的影子，深拷贝就是复制了这个人。</p><h2 id="3-方法"><a href="#3-方法" class="headerlink" title="3.方法"></a>3.方法</h2><h3 id="浅拷贝"><a href="#浅拷贝" class="headerlink" title="浅拷贝"></a>浅拷贝</h3> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> shallowClone = (obj) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> result = [];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i <span class="keyword">in</span> obj) &#123;</span><br><span class="line">        <span class="keyword">if</span> (obj.hasOwnProperty(i)) &#123;</span><br><span class="line">            result[i] = obj[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//Object的 hasOwnProperty()方法返回一个布尔值，判断对象是否包含特定的自身（非继承）属性。hasOwnProperty()方法来忽略继承属性.</span></span><br><span class="line"><span class="comment">//object.assign() 把任意多个的源对象自身的可枚举属性拷贝给目标对象，然后返回目标对象</span></span><br><span class="line"><span class="comment">//Array.prototype.concat() 数组的一个内置方法，用户合并两个或者多个数组，不会改变现有数组，而是返回一个新数组</span></span><br><span class="line"><span class="comment">//Array.prototype.slice() 数组的一个内置方法，该方法会返回一个新的对象，不会改变原数组 </span></span><br><span class="line"><span class="comment">//obj展开运算符 [...]</span></span><br><span class="line"><span class="comment">//以上几种方式也可以</span></span><br></pre></td></tr></table></figure><h3 id="深拷贝"><a href="#深拷贝" class="headerlink" title="深拷贝"></a>深拷贝</h3> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> deepClone = (obj) =&gt; &#123;</span><br><span class="line">    <span class="keyword">let</span> result = <span class="built_in">Array</span>.isArray(obj) ? [] : &#123;&#125;;</span><br><span class="line">    <span class="keyword">for</span>( <span class="keyword">let</span> i <span class="keyword">in</span> obj )&#123;</span><br><span class="line">        <span class="keyword">if</span>( obj.hasOwnProperty(i) )&#123;</span><br><span class="line">            <span class="keyword">if</span>( <span class="keyword">typeof</span> obj[i] === <span class="string">'object'</span> &amp;&amp;  obj[i] !== <span class="literal">null</span>)&#123;</span><br><span class="line">                result[i] = deepClone(obj[i]) <span class="comment">//递归复制</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                result[i] = obj[i]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//Object的hasOwnProperty()方法返回一个布尔值，判断对象是否包含特定的自身（非继承）属性。hasOwnProperty()方法来忽略继承属性</span></span><br></pre></td></tr></table></figure><p> JSON.stringfy()和JSON.parse()会忽略undefined、function、symbol，导致属性丢失。</p>]]></content>
      
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> 小技巧 </tag>
            
            <tag> 拷贝 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>四、react &amp; html2canvas 生成图片下载实践</title>
      <link href="/2019/12/16/4.react%20&amp;%20html2canvas%E5%AE%9E%E8%B7%B5/"/>
      <url>/2019/12/16/4.react%20&amp;%20html2canvas%E5%AE%9E%E8%B7%B5/</url>
      
        <content type="html"><![CDATA[<h2 id="html2canvas的选择"><a href="#html2canvas的选择" class="headerlink" title="html2canvas的选择"></a>html2canvas的选择</h2><p>现在一般生成图片有前端处理和后端处理两种方式，后端生成的方案不需要前端出力，只需要拿路径渲染，但是会出现数据延时，模板更换困难等问题，出于灵活性和减少后端工作量考虑，我们采取 html2canvas  绘制页面。</p><p> <a href="https://www.npmjs.com/package/html2canvas" target="_blank" rel="external">html2canvas npm</a><br> <a href="http://html2canvas.hertzen.com/" target="_blank" rel="external">html2canvas 介绍</a></p> <a id="more"></a><h3 id="1-在react中的使用"><a href="#1-在react中的使用" class="headerlink" title="1.在react中的使用"></a>1.在react中的使用</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//安装</span></span><br><span class="line">npm install --save html2canvas</span><br><span class="line">or</span><br><span class="line">yarn add html2canvas</span><br><span class="line"></span><br><span class="line"><span class="comment">//引入</span></span><br><span class="line"><span class="keyword">import</span> html2canvas <span class="keyword">from</span> <span class="string">'html2canvas'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用</span></span><br><span class="line">html2canvas(<span class="built_in">document</span>.body).then(<span class="function"><span class="keyword">function</span>(<span class="params">canvas</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">document</span>.body.appendChild(canvas);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//如果想生成一部分页面的话，html2canvas可以换成 this.refs.demo</span></span><br><span class="line"><span class="comment">//&lt;div ref="demo"&gt;&lt;/div&gt;</span></span><br></pre></td></tr></table></figure><p>上面就会把页面简单的绘制出来。</p><h2 id="2-canvas-下载"><a href="#2-canvas-下载" class="headerlink" title="2.canvas 下载"></a>2.canvas 下载</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">html2canvas(<span class="keyword">this</span>.refs.demo).then(<span class="function"><span class="keyword">function</span>(<span class="params">canvas</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> imgUrl = canvas.toDataURL(<span class="string">"image/png"</span>); <span class="comment">// 获取图片的url</span></span><br><span class="line">    <span class="keyword">const</span> elA = <span class="built_in">document</span>.createElement(<span class="string">"a"</span>);</span><br><span class="line">    elA.download = +<span class="keyword">new</span> <span class="built_in">Date</span>() + <span class="string">".png"</span>;</span><br><span class="line">    elA.href = imgUrl ;</span><br><span class="line">    elA.click();</span><br><span class="line">    elA.remove();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//微信中不能下载图片，可以展示图片并提示用户长按保存图片</span></span><br></pre></td></tr></table></figure><h2 id="3-参考"><a href="#3-参考" class="headerlink" title="3.参考"></a>3.参考</h2><p> <a href="https://juejin.im/post/5df2e8ab6fb9a0163770816d" target="_blank" rel="external">参考1</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> html2canvas </tag>
            
            <tag> js </tag>
            
            <tag> react </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>三、一些自己在使用css、js技巧</title>
      <link href="/2019/12/12/3.%E4%B8%80%E4%BA%9B%E8%87%AA%E5%B7%B1%E5%9C%A8%E4%BD%BF%E7%94%A8css%E3%80%81js%E6%8A%80%E5%B7%A7/"/>
      <url>/2019/12/12/3.%E4%B8%80%E4%BA%9B%E8%87%AA%E5%B7%B1%E5%9C%A8%E4%BD%BF%E7%94%A8css%E3%80%81js%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<h2 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h2><a id="more"></a><p>1.省略：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//单行省略</span></span><br><span class="line">width: <span class="number">100</span>px;</span><br><span class="line">white-space: nowrap;</span><br><span class="line">text-overflow: ellipsis;</span><br><span class="line">overflow: hidden;</span><br><span class="line"></span><br><span class="line"><span class="comment">//多行省略</span></span><br><span class="line">width: <span class="number">100</span>px;</span><br><span class="line">height:<span class="number">50</span>px;</span><br><span class="line">line-height: <span class="number">30</span>px;</span><br><span class="line">overflow: hidden;</span><br><span class="line">text-overflow: ellipsis;</span><br><span class="line">display: -webkit-box;</span><br><span class="line">-webkit-line-clamp: <span class="number">3</span>;  <span class="comment">//块元素显示的文本的行数。</span></span><br><span class="line">-webkit-box-orient: vertical;</span><br></pre></td></tr></table></figure><p>2.下箭头<br><img src="/images/two.png" alt></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">width: 7px;</span><br><span class="line">height: 7px;</span><br><span class="line">border-bottom: 2px solid #bdbdbd;</span><br><span class="line">border-right: 2px solid #bdbdbd;</span><br><span class="line">transform: rotate(45deg);</span><br></pre></td></tr></table></figure><p>3.更换谷歌滚动条样式：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">::-webkit-scrollbar-thumb&#123;&#125;    <span class="comment">//更改谷歌滚动条样式</span></span><br><span class="line">::-webkit-scrollbar&#123;&#125;   <span class="comment">//更改谷歌滚动条背景样式</span></span><br></pre></td></tr></table></figure><p>4.改变placeholder的颜色</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">::-moz-placeholder &#123; color: #CDCDCD; &#125;</span><br><span class="line">::-webkit-input-placeholder &#123; color:#CDCDCD; &#125;</span><br><span class="line">:-ms-input-placeholder &#123; color:#CDCDCD; &#125;</span><br></pre></td></tr></table></figure><p>5.阴影：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">//左</span><br><span class="line">box-shadow: -7px 0 5px -5px #333;</span><br><span class="line">//右</span><br><span class="line">box-shadow: 7px 0 5px -5px #333;</span><br><span class="line">//上</span><br><span class="line">box-shadow: 0px -7px 5px -5px #333;</span><br><span class="line">//下</span><br><span class="line">box-shadow: 0px 7px 5px -5px #333;</span><br></pre></td></tr></table></figure><p><img src="/images/three.png" alt></p><p>6.单行文字居中，多行文字居左</p><p>方法1：(推荐)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.text&#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    justify-content: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>方法2：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">.text&#123;</span><br><span class="line">    display: inline-block;</span><br><span class="line">    position: relative;</span><br><span class="line">    left: <span class="number">50</span>%;</span><br><span class="line">    transform: translateX(-<span class="number">50</span>%);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>方法3：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// html</span></span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"content"</span>&gt;</span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"text"</span>&gt;</span>单行文字居中，多行文字居左。单行文字居中，多行文字居左。单行文字居中，多行文字居左。<span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">// css</span><br><span class="line">.content&#123;</span><br><span class="line">    text-align: center;</span><br><span class="line">&#125;</span><br><span class="line">.text&#123;</span><br><span class="line">    display: inline-block;</span><br><span class="line">    text-align: left;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 原理</span><br><span class="line">//对于一个元素，如果其display属性值是inline-block，那么其宽度由内部元素决定，但永远小于“包含块”容器的尺寸，也就是“包裹性（shrink-to-fit）”</span></span><br></pre></td></tr></table></figure><ol start="7"><li>less实现loading</li></ol><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">.loader &#123;</span><br><span class="line">    position: relative;</span><br><span class="line">    transition: background-color .3s;</span><br><span class="line">    pointer-events: none; </span><br><span class="line">    &amp;:after &#123;</span><br><span class="line">        content: '';</span><br><span class="line">        position: absolute;</span><br><span class="line">        width: 20px;</span><br><span class="line">        height: 20px;</span><br><span class="line">        animation: loadingCircle infinite .75s linear;</span><br><span class="line">        border: 2px solid #888;</span><br><span class="line">        border-top-color: transparent;</span><br><span class="line">        border-radius: 50%;</span><br><span class="line">        z-index: 10;</span><br><span class="line">        top: 0;</span><br><span class="line">        bottom: 0;</span><br><span class="line">        left: 0;</span><br><span class="line">        right: 0;</span><br><span class="line">        margin: auto; </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">.hideLoader&#123;</span><br><span class="line">    display: none;</span><br><span class="line">&#125;</span><br><span class="line">@keyframes loadingCircle &#123;</span><br><span class="line">    0% &#123;</span><br><span class="line">        transform: rotate(0); </span><br><span class="line">    &#125;</span><br><span class="line">    100% &#123;</span><br><span class="line">        transform: rotate(360deg); </span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="8"><li><p>input 功能</p><ul><li><p>弹出数字键盘</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 有"#" "*"符号输入 </span></span><br><span class="line">&lt;input type=<span class="string">"tel"</span> /&gt;</span><br><span class="line"><span class="comment">// 纯数字 </span></span><br><span class="line">&lt;input pattern=<span class="string">"\d*"</span> /&gt;</span><br></pre></td></tr></table></figure></li><li><p>调用系统的某些功能</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">// 多选 </span><br><span class="line">&lt;input type="file" multiple /&gt;</span><br><span class="line">//  选择视频或者拍摄视频 </span><br><span class="line">&lt;input type="file" accept="video/*" /&gt;</span><br><span class="line">// 选择照片或者拍摄照片</span><br><span class="line">&lt;input type="file" accept="image/*" /&gt;</span><br><span class="line">// 附加</span><br><span class="line">// 发送邮件</span><br><span class="line">&lt;a href="mailto:839626987@qq.com"&gt;发邮件给：13116700755@163.com&lt;/a&gt;</span><br><span class="line">// 发送短信 </span><br><span class="line">&lt;a href="sms:10086"&gt;发短信给: 10086&lt;/a&gt;</span><br><span class="line">// 拨号</span><br><span class="line">&lt;a href="tel:10086"&gt;打电话给: 10086&lt;/a&gt;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>flex布局最后一行列表左对齐的方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">.container &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    justify-content: space-between;</span><br><span class="line">    flex-wrap: wrap;</span><br><span class="line">    .list &#123;</span><br><span class="line">        background-color: skyblue;</span><br><span class="line">        margin: <span class="number">10</span>px;</span><br><span class="line">    &#125;</span><br><span class="line">    &amp;::after &#123;</span><br><span class="line">        content: <span class="string">''</span>;</span><br><span class="line">        flex: auto;    <span class="comment">/* 或者flex: 1 */</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="JS"><a href="#JS" class="headerlink" title="JS"></a>JS</h2><p>1.判断 val 是否存在</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> item <span class="keyword">in</span> data)&#123;</span><br><span class="line">    <span class="keyword">if</span>(!data[item])&#123;</span><br><span class="line">        data[item] = <span class="string">'--'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.上传图片回填</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> reads = <span class="keyword">new</span> FileReader();</span><br><span class="line">reads.readAsDataURL(files);</span><br><span class="line">reads.onload = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">'ID'</span>).src = <span class="keyword">this</span>.result;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>3.获取url参数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getParams</span> (<span class="params">name</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> reg = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"(^|&amp;)"</span> + name + <span class="string">"=([^&amp;]*)(&amp;|$)"</span>);</span><br><span class="line">    <span class="keyword">let</span> r = <span class="built_in">window</span>.location.search.substr(<span class="number">1</span>).match(reg);</span><br><span class="line">    <span class="keyword">if</span> (r != <span class="literal">null</span>) <span class="keyword">return</span> <span class="built_in">unescape</span>(r[<span class="number">2</span>]); <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4.更改url参数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">replaceParamVal</span>(<span class="params">paramName,replaceWith</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> oUrl = <span class="built_in">window</span>.location.href.toString();</span><br><span class="line">    <span class="keyword">var</span> re = evil(<span class="string">'/('</span>+ paramName+<span class="string">'=)([^&amp;]*)/gi'</span>);</span><br><span class="line">    <span class="keyword">var</span> nUrl = oUrl.replace(re,paramName+<span class="string">'='</span>+replaceWith);</span><br><span class="line">    <span class="keyword">this</span>.location = nUrl;</span><br><span class="line">    <span class="built_in">window</span>.location.href=nUrl</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">evil</span>(<span class="params">fn</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> Fn = <span class="built_in">Function</span>; <span class="comment">//一个变量指向Function，防止有些前端编译工具报错</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> Fn(<span class="string">'return '</span> + fn)();</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>5.ios window.history.back() 致使 localStorage不同步</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.onpageshow = <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (event.persisted) &#123;</span><br><span class="line">        <span class="built_in">window</span>.location.reload();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>6.判断对象是否存在</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> page = &#123;</span><br><span class="line">    user:<span class="string">'111'</span>,</span><br><span class="line">    cityInfo:&#123;</span><br><span class="line">        city:<span class="string">'hz'</span>,</span><br><span class="line">        code:<span class="string">'111'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> name = ( (page || &#123;&#125;).cityInfo || &#123;&#125; ).city || <span class="string">'111'</span>;</span><br><span class="line"><span class="built_in">console</span>.log(name)</span><br></pre></td></tr></table></figure><p>7.textatea 高度自适应</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">//jq:</span><br><span class="line">el.on('input', function () &#123;</span><br><span class="line">    const height =  $(this).scrollTop() + $(this).prop("scrollHeight") + "px";</span><br><span class="line">    $(this).height(height)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">//react :</span><br><span class="line">const el = this.refs.remark;</span><br><span class="line">el.style.height = 'auto';  </span><br><span class="line">if(el.scrollHeight &gt;=el.offsetHeight)&#123;   #如果高度不够，再重新设置</span><br><span class="line">    el.style.height = el.scrollHeight + 'px'</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>8.查找重复字符</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> red= <span class="string">'hjqjbsaxhhhh'</span>; </span><br><span class="line"><span class="keyword">let</span> obj = &#123;&#125;;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i&lt;red.length; i++) &#123; </span><br><span class="line">    obj[red[i]] = ++obj[red[i]] || <span class="number">1</span> ;</span><br><span class="line">    <span class="built_in">console</span>.log(red[i]) </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>9.安卓键盘置顶按钮(安卓会出现键盘出来,按钮在下面没上来的情况)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span>  <span class="title">handleSetBtnPosition</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> win_h = $(<span class="built_in">window</span>).height();</span><br><span class="line">    <span class="built_in">window</span>.addEventListener(<span class="string">'resize'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> u = navigator.userAgent;</span><br><span class="line">        <span class="keyword">if</span> (u.indexOf(<span class="string">'Android'</span>) &gt; -<span class="number">1</span> || u.indexOf(<span class="string">'Linux'</span>) &gt; -<span class="number">1</span>) &#123;         </span><br><span class="line">            <span class="keyword">if</span>($(<span class="built_in">window</span>).height() &lt; win_h)&#123;</span><br><span class="line">                $(<span class="string">"#submit_btn"</span>).hide();</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                $(<span class="string">"#submit_btn"</span>).show();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="10"><li>自动添加空格</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"13116700755"</span>.replace(<span class="regexp">/(?&lt;=^\d&#123;3&#125;(\d&#123;4&#125;)*)(?!$)/g</span>, <span class="string">' '</span>) ---&gt; <span class="string">"131 1670 0755"</span></span><br></pre></td></tr></table></figure><ol start="11"><li><p>获取key和val，组成新对象</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> cities = [</span><br><span class="line">    &#123; name: <span class="string">'Paris'</span>, visited: <span class="string">'no'</span> &#125;,</span><br><span class="line">    &#123; name: <span class="string">'Lyon'</span>, visited: <span class="string">'no'</span> &#125;,</span><br><span class="line">    &#123; name: <span class="string">'Marseille'</span>, visited: <span class="string">'yes'</span> &#125;,</span><br><span class="line">    &#123; name: <span class="string">'Rome'</span>, visited: <span class="string">'yes'</span> &#125;,</span><br><span class="line">    &#123; name: <span class="string">'Milan'</span>, visited: <span class="string">'no'</span> &#125;,</span><br><span class="line">    &#123; name: <span class="string">'Palermo'</span>, visited: <span class="string">'yes'</span> &#125;,</span><br><span class="line">    &#123; name: <span class="string">'Genoa'</span>, visited: <span class="string">'yes'</span> &#125;,</span><br><span class="line">    &#123; name: <span class="string">'Berlin'</span>, visited: <span class="string">'no'</span> &#125;,</span><br><span class="line">    &#123; name: <span class="string">'Hamburg'</span>, visited: <span class="string">'yes'</span> &#125;,</span><br><span class="line">    &#123; name: <span class="string">'New York'</span>, visited: <span class="string">'yes'</span> &#125;</span><br><span class="line">];  </span><br><span class="line"><span class="keyword">const</span> result = cities.reduce((prv, item) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        ...prv,</span><br><span class="line">        [item.name]: item.visited</span><br><span class="line">    &#125;</span><br><span class="line">&#125;, &#123;&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(result);</span><br><span class="line"><span class="comment">/**</span><br><span class="line">    打印结果：</span><br><span class="line">    &#123;</span><br><span class="line">        Paris: "no",</span><br><span class="line">        Lyon: "no",</span><br><span class="line">        Marseille: "yes",</span><br><span class="line">        Rome: "yes",</span><br><span class="line">        Milan: "no",</span><br><span class="line">        Palermo: "yes",</span><br><span class="line">        Genoa: "yes",</span><br><span class="line">        Berlin: "no",</span><br><span class="line">        Hamburg: "yes",</span><br><span class="line">        New York: "yes"</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">**/</span></span><br></pre></td></tr></table></figure></li><li><p>毫秒倒计时</p></li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> formatTime = (time) =&gt; &#123;</span><br><span class="line">    <span class="keyword">let</span> ms = (time % <span class="number">6000</span>) % <span class="number">10</span>;</span><br><span class="line">    </span><br><span class="line">    time = <span class="built_in">parseInt</span>(time / <span class="number">10</span>, <span class="number">10</span>);</span><br><span class="line">    <span class="keyword">let</span> sec = time % <span class="number">60</span>;</span><br><span class="line">    <span class="keyword">let</span> hour = <span class="built_in">parseInt</span>(time / <span class="number">3600</span>, <span class="number">10</span>);</span><br><span class="line">    <span class="keyword">let</span> min = <span class="built_in">parseInt</span>((time - (hour * <span class="number">3600</span>)) / <span class="number">60</span>, <span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">    hour =  hour &lt; <span class="number">10</span> ? (<span class="string">'0'</span> + hour) : hour;</span><br><span class="line">    min =  min &lt; <span class="number">10</span> ? (<span class="string">'0'</span> + min) : min;</span><br><span class="line">    sec = sec &lt; <span class="number">10</span> ? (<span class="string">'0'</span> + sec) : sec;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> hour + <span class="string">':'</span> + min + <span class="string">':'</span> + sec + <span class="string">'.'</span> + ms;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line">    let time = 100 * 10 ; // s</span><br><span class="line">    let timer = null;</span><br><span class="line">    timer = setInterval(() =&gt; &#123;</span><br><span class="line">        time = --time</span><br><span class="line">        if(time &gt; 0)&#123;</span><br><span class="line">            const date = formatTime(time)</span><br><span class="line">            $('.time').html(date)</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            clearInterval(timer)</span><br><span class="line">            $('.time').html('00')</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,100)</span><br><span class="line">**/</span></span><br></pre></td></tr></table></figure><ol start="13"><li>利用数组获取当前时间</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">  <span class="keyword">const</span> showTime = () =&gt; &#123;</span><br><span class="line">      <span class="keyword">let</span> date = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line"><span class="keyword">let</span> h = date.getHours();</span><br><span class="line"><span class="keyword">let</span> m = date.getMinutes();</span><br><span class="line">      <span class="keyword">let</span> s = date.getSeconds();</span><br><span class="line">      <span class="keyword">let</span> arrTime = [ </span><br><span class="line">h &lt; <span class="number">10</span> ? <span class="number">0</span> : <span class="built_in">parseInt</span>( h/<span class="number">10</span> ), </span><br><span class="line">h % <span class="number">10</span>,</span><br><span class="line">m &lt; <span class="number">10</span> ? <span class="number">0</span> : <span class="built_in">parseInt</span>( m/<span class="number">10</span> ), </span><br><span class="line">m % <span class="number">10</span>,</span><br><span class="line">s &lt; <span class="number">10</span> ? <span class="number">0</span> : <span class="built_in">parseInt</span>( s/<span class="number">10</span> ), </span><br><span class="line">s % <span class="number">10</span>,</span><br><span class="line">      ];</span><br><span class="line">      <span class="keyword">return</span> arrTime; <span class="comment">// 返回的是时间数组，例[ 1,2,0,0,0,0 ] 就是12:00:00</span></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> css </tag>
            
            <tag> js </tag>
            
            <tag> 小技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>二、vsCode终端打开问题</title>
      <link href="/2019/12/09/2.vsCode%E7%BB%88%E7%AB%AF%E6%89%93%E5%BC%80%E9%97%AE%E9%A2%98/"/>
      <url>/2019/12/09/2.vsCode%E7%BB%88%E7%AB%AF%E6%89%93%E5%BC%80%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>之前打开vscode时，报 终端进程命令”/bin/bash -l”无法启动 (退出代码: 1)；</p><p><img src="/images/one.png" alt></p><a id="more"></a><p>其他报错也可以参考一下：</p><h2 id="有以下几个解决思路"><a href="#有以下几个解决思路" class="headerlink" title="有以下几个解决思路"></a>有以下几个解决思路</h2><p>1.重装vscode；（我是这个方法解决的）</p><p>2.因为 VSCode 工作区的文件夹有变更（删除、移动等），导致 VSCode 打开终端时，找不到此文件夹而报错；</p><p>3.配置下 git 路径不对，重新配置一下git；在设置里修改 “terminal.integrated.shell.windows”: “git路径base.exe”；</p><p>4.用管理员的权限来执行vscode，要不然它没有权限使用cmd;右击快捷键点击属性然后选择以管理员的身份运行</p><ol start="5"><li><a href="https://github.com/Microsoft/vscode/issues/17450" target="_blank" rel="external">github解决思路</a></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> vscode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一、React 多页面打包</title>
      <link href="/2019/12/06/1.react%20%E5%A4%9A%E9%A1%B5%E9%9D%A2%E6%89%93%E5%8C%85/"/>
      <url>/2019/12/06/1.react%20%E5%A4%9A%E9%A1%B5%E9%9D%A2%E6%89%93%E5%8C%85/</url>
      
        <content type="html"><![CDATA[<h2 id="缘由"><a href="#缘由" class="headerlink" title="缘由"></a>缘由</h2><p>之前我们用的是react单页面打包，方便是方便，开包即用。但是因为我们做的是活动页面，一般每次都只有一个页面，不仅要建大量的路由，而且资源冗杂，即使已经做了资源分割。还有做多页面最重要的原因是：单页面打包，会影响所有的页面，如果一个页面报错，那么其他的页面也无法访问。下面开始配置:</p><h3 id="一-webpack及react版本"><a href="#一-webpack及react版本" class="headerlink" title="一.webpack及react版本"></a>一.webpack及react版本</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"webpack"</span>: <span class="string">"^4.19.1"</span>,</span><br><span class="line"><span class="string">"react"</span>: <span class="string">"^16.8.3"</span>,</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="二-文件夹基本构造"><a href="#二-文件夹基本构造" class="headerlink" title="二.文件夹基本构造"></a>二.文件夹基本构造</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">config </span><br><span class="line">    - path.js</span><br><span class="line">    - webpack.config.js</span><br><span class="line">public </span><br><span class="line">    - index.html</span><br><span class="line">src    </span><br><span class="line">    - page </span><br><span class="line">        - home </span><br><span class="line">            - component.js</span><br><span class="line">            - index.js </span><br><span class="line">            - index.less</span><br><span class="line">index.js <span class="comment">//必不可少，可以为空</span></span><br></pre></td></tr></table></figure><!-- More info: [Generating](https://hexo.io/docs/generating.html) --><h3 id="1-page下的index-js"><a href="#1-page下的index-js" class="headerlink" title="1.page下的index.js"></a>1.page下的index.js</h3><p>home是一个单独的页面，包括 </p><p>component.js:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Home</span> <span class="keyword">extends</span> <span class="title">Component</span></span>&#123;</span><br><span class="line">    constructor(props)&#123;</span><br><span class="line">        <span class="keyword">super</span>(props)</span><br><span class="line">        <span class="keyword">this</span>.state = &#123;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    componentDidMount()&#123;&#125;</span><br><span class="line">    render() &#123;</span><br><span class="line">        <span class="keyword">return</span>(</span><br><span class="line">            <span class="xml"><span class="tag">&lt;<span class="title">div</span>&gt;</span></span><br><span class="line">                # ...</span><br><span class="line">            <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        )</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> Home;</span><br></pre></td></tr></table></figure><p>index.js:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'babel-polyfill'</span></span><br><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> ReactDOM <span class="keyword">from</span> <span class="string">'react-dom'</span>;</span><br><span class="line"><span class="keyword">import</span> Home <span class="keyword">from</span> <span class="string">'./component'</span>;</span><br><span class="line">ReactDOM.render(<span class="xml"><span class="tag">&lt;<span class="title">Home</span> /&gt;</span>, document.getElementById('root'));</span></span><br></pre></td></tr></table></figure><p>index.less是页面相关的样式</p><h3 id="2-config下的path-js"><a href="#2-config下的path-js" class="headerlink" title="2.config下的path.js"></a>2.config下的path.js</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取page/*/下的所有index</span></span><br><span class="line"><span class="keyword">const</span> globby = <span class="built_in">require</span>(<span class="string">'globby'</span>);</span><br><span class="line"><span class="keyword">const</span> entriesPath = globby.sync([resolveApp(<span class="string">'src/page'</span>) + <span class="string">'/*/index.js'</span>]);</span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    ...</span><br><span class="line">    entriesPath</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面这里是关键，东西有点多，配错了就没效果了：⬇️</p><h3 id="3-config下的webpack-config-js"><a href="#3-config下的webpack-config-js" class="headerlink" title="3.config下的webpack.config.js"></a>3.config下的webpack.config.js</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">// 获取指定路径下的入口文件</span><br><span class="line">function getEntries()&#123;</span><br><span class="line">    const entries = &#123;&#125;;</span><br><span class="line">    const files = paths.entriesPath;</span><br><span class="line">    files.forEach(filePath =&gt; &#123;</span><br><span class="line">        let tmp = filePath.split('/');</span><br><span class="line">        let name = tmp[tmp.length - 2];</span><br><span class="line">        entries[name] = [</span><br><span class="line">            require.resolve('react-dev-utils/webpackHotDevClient'),</span><br><span class="line">            filePath,</span><br><span class="line">        ];</span><br><span class="line">    &#125;);</span><br><span class="line">    return entries;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 入口文件对象</span><br><span class="line">const entries = getEntries();</span><br><span class="line"></span><br><span class="line">// 有多少个页面就new 多少个HtmlWebpackPlugin</span><br><span class="line">const htmlPlugin = Object.keys(entries).map(item =&gt; &#123;</span><br><span class="line">    return new HtmlWebpackPlugin(&#123;</span><br><span class="line">        inject: true,</span><br><span class="line">        template: paths.appHtml, # pulblic/index.html 公共html模板</span><br><span class="line">        filename:  item + '/' + item + '.html', # 这里是关键,访问入口由这里决定 http://localhost:3000/home/home.html</span><br><span class="line">        chunks: [item]</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//更换入口</span><br><span class="line">entry: &#123;</span><br><span class="line">    # devtool: isEnvProduction</span><br><span class="line">    # ? shouldUseSourceMap</span><br><span class="line">    #     ? 'source-map'</span><br><span class="line">    #     : false</span><br><span class="line">    # : isEnvDevelopment &amp;&amp; 'eval-source-map',</span><br><span class="line">    entries</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// 出口也顺便更改一下</span><br><span class="line">output:&#123;</span><br><span class="line">    #把对应资源放到对应页面下面,这里[name] 就是home</span><br><span class="line">    #isEnvDevelopment 对应的内容一定要配，不然本地开发只能找到一个页面</span><br><span class="line">    #version 是时间戳 const version = +new Date();</span><br><span class="line">    filename: isEnvProduction</span><br><span class="line">    ?    '[name]/static/js/[name].[chunkhash:8].'+version+'.js'</span><br><span class="line">    : isEnvDevelopment &amp;&amp; '[name]/static/js/bundle.js',</span><br><span class="line"></span><br><span class="line">    chunkFilename: isEnvProduction</span><br><span class="line">    ?    '[name]/static/js/[name].[chunkhash:8].'+version+'.chunk.js'</span><br><span class="line">    : isEnvDevelopment &amp;&amp; '[name]/static/js/[name].chunk.'+version+'.js',</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//上面是js，css也改一下，全局搜索 MiniCssExtractPlugin</span><br><span class="line">new MiniCssExtractPlugin(&#123;</span><br><span class="line">    // Options similar to the same options in webpackOptions.output</span><br><span class="line">    // both options are optional</span><br><span class="line">    filename:   '[name]/static/css/[name].[contenthash:8].'+version+'.css',</span><br><span class="line">    chunkFilename:  '[name]/static/css/[name].[contenthash:8].chunk.'+version+'.css',</span><br><span class="line">&#125;),</span><br><span class="line"></span><br><span class="line">// 图片资源 全局搜索 .png ,图片是独立的</span><br><span class="line">&#123;</span><br><span class="line">    test: [/\.bmp$/, /\.gif$/, /\.jpe?g$/, /\.png$/],</span><br><span class="line">    loader: require.resolve('url-loader')  ,</span><br><span class="line">    options: &#123;</span><br><span class="line">    limit: 10000,</span><br><span class="line">    name: 'static/media/[name].[hash:8].'+version+'.[ext]',</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h3 id="4-打包效果"><a href="#4-打包效果" class="headerlink" title="4.打包效果"></a>4.打包效果</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">dist</span><br><span class="line">   - 1  // 打包出的公共的js文件</span><br><span class="line">   - 2  // 打包出的公共的js文件</span><br><span class="line">   - assets #本地静态资源</span><br><span class="line">   - static #打包的静态图片资源</span><br><span class="line">       - media</span><br><span class="line">           - xxxx.png</span><br><span class="line">   - home</span><br><span class="line">       - home.html</span><br><span class="line">       - static</span><br><span class="line">           - css</span><br><span class="line">             - xxx.css</span><br><span class="line">           - js</span><br><span class="line">             - xxx.js</span><br><span class="line">    xxx</span><br></pre></td></tr></table></figure><p>如果多个页面的话，其他页面效果和home文件一样。</p><h3 id="4-最后一点"><a href="#4-最后一点" class="headerlink" title="4.最后一点"></a>4.最后一点</h3><p>打完包，可能会出现资源访问不到，在 package.json 配置一下homepage</p><p>(1).我的是下面，根据项目路径来写：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"homepage"</span>: <span class="string">"../"</span>,</span><br></pre></td></tr></table></figure><p>顺便提一下，本地跨域，同样在 package.json 配置一下 proxy就可以了：</p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"proxy"</span>: <span class="string">"域名"</span>,</span><br></pre></td></tr></table></figure><p>打完包之后，放到服务器上，跳转访问路径也要配置的</p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line"><span class="comment">//比如本地 </span></span><br><span class="line">http:<span class="comment">//localhost:3000/home/home.html;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//线上:</span></span><br><span class="line">https:www.baidu.com/dist/demo/home/home.html</span><br><span class="line"></span><br><span class="line"><span class="comment">//那么当你跳转链接的时候，就要这样：</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//跳转</span></span><br><span class="line"><span class="keyword">const</span> param = <span class="built_in">window</span>.location.href.includes(<span class="string">'baidu'</span>) ? <span class="string">'/dist/demo'</span> : <span class="string">''</span>;</span><br><span class="line"><span class="built_in">window</span>.location.href = param + <span class="string">'/home/home.html'</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> react </tag>
            
            <tag> webpack </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
